{
  "AcceleratorRange.EightG": "The accelerator measures forces up to 8 gravity",
  "AcceleratorRange.FourG": "The accelerator measures forces up to 4 gravity",
  "AcceleratorRange.OneG": "The accelerator measures forces up to 1 gravity",
  "AcceleratorRange.TwoG": "The accelerator measures forces up to 2 gravity",
  "Array": "Add, remove, and replace items in lists.",
  "Array._pickRandom": "Return a random value from the array",
  "Array._popStatement": "Remove the last element from an array and return it.",
  "Array._removeAtStatement": "Remove the element at a certain index.",
  "Array._shiftStatement": "Remove the first element from an array and return it. This method changes the length of the array.",
  "Array._unshiftStatement": "Add one element to the beginning of an array and return the new length of the array.",
  "Array.concat": "Concatenates the values with another array.",
  "Array.concat|param|arr": "The other array that is being concatenated with",
  "Array.every": "Tests whether all elements in the array pass the test implemented by the provided function.",
  "Array.every|param|callbackfn": "A function that accepts up to two arguments. The every method calls the callbackfn function one time for each element in the array.",
  "Array.fill": "Fills all the elements of an array from a start index to an end index with a static value. The end index is not included.",
  "Array.filter": "Return the elements of an array that meet the condition specified in a callback function.",
  "Array.filter|param|callbackfn": "A function that accepts up to two arguments. The filter method calls the callbackfn function one time for each element in the array.",
  "Array.find": "Returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned.",
  "Array.forEach": "Call a defined callback function on each element of an array.",
  "Array.forEach|param|callbackfn": "A function that accepts up to two arguments. The forEach method calls the callbackfn function one time for each element in the array.",
  "Array.get": "Get the value at a particular index",
  "Array.get|param|index": "the zero-based position in the list of the item, eg: 0",
  "Array.indexOf": "Return the index of the first occurrence of a value in an array.",
  "Array.indexOf|param|fromIndex": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
  "Array.indexOf|param|item": "The value to locate in the array.",
  "Array.insertAt": "Insert the value at a particular index, increases length by 1",
  "Array.insertAt|param|index": "the zero-based position in the list to insert the value, eg: 0",
  "Array.isArray": "Check if a given object is an array.",
  "Array.join": "joins all elements of an array into a string and returns this string.",
  "Array.join|param|sep": "the string separator",
  "Array.length": "Get or set the length of an array. This number is one more than the index of the last element the array.",
  "Array.map": "Call a defined callback function on each element of an array, and return an array containing the results.",
  "Array.map|param|callbackfn": "A function that accepts up to two arguments. The map method calls the callbackfn function one time for each element in the array.",
  "Array.pop": "Remove the last element from an array and return it.",
  "Array.push": "Append a new element to an array.",
  "Array.reduce": "Call the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
  "Array.reduce|param|callbackfn": "A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the array.",
  "Array.reduce|param|initialValue": "Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
  "Array.removeAt": "Remove the element at a certain index.",
  "Array.removeElement": "Remove the first occurence of an object. Returns true if removed.",
  "Array.reverse": "Reverse the elements in an array. The first array element becomes the last, and the last array element becomes the first.",
  "Array.set": "Store a value at a particular index",
  "Array.set|param|index": "the zero-based position in the list to store the value, eg: 0",
  "Array.set|param|value": "the value to insert, eg: 0",
  "Array.shift": "Remove the first element from an array and return it. This method changes the length of the array.",
  "Array.slice": "Return a section of an array.",
  "Array.slice|param|end": "The end of the specified portion of the array. eg: 0",
  "Array.slice|param|start": "The beginning of the specified portion of the array. eg: 0",
  "Array.some": "Tests whether at least one element in the array passes the test implemented by the provided function.",
  "Array.some|param|callbackfn": "A function that accepts up to two arguments. The some method calls the callbackfn function one time for each element in the array.",
  "Array.sort": "Sort the elements of an array in place and returns the array. The sort is not necessarily stable.",
  "Array.splice": "Remove elements from an array.",
  "Array.splice|param|deleteCount": "The number of elements to remove. eg: 0",
  "Array.splice|param|start": "The zero-based location in the array from which to start removing elements. eg: 0",
  "Array.unshift": "Add one element to the beginning of an array and return the new length of the array.",
  "Array@type": "Add, remove, and replace items in lists.",
  "Boolean.toString": "Returns a string representation of an object.",
  "Buffer.chunked": "Splits buffer into parts no larger than specified",
  "Buffer.concat": "Return concatenation of current buffer and the given buffer\n\nConcatenates all buffers in the list",
  "Buffer.create": "Allocate a new buffer.",
  "Buffer.create|param|size": "number of bytes in the buffer",
  "Buffer.equals": "Returns true if this and the other buffer hold the same data",
  "Buffer.fill": "Fill (a fragment) of the buffer with given value.",
  "Buffer.fromArray": "Create a new buffer initialized to bytes from given array.",
  "Buffer.fromArray|param|bytes": "data to initialize with",
  "Buffer.fromHex": "Create a new buffer, decoding a hex string",
  "Buffer.fromUTF8": "Create a new buffer with UTF8-encoded string",
  "Buffer.fromUTF8|param|str": "the string to put in the buffer",
  "Buffer.getNumber": "Read a number in specified format from the buffer.",
  "Buffer.getUint8": "Reads an unsigned byte at a particular location",
  "Buffer.hash": "Compute k-bit FNV-1 non-cryptographic hash of the buffer.",
  "Buffer.indexOf": "Return position of other buffer in current buffer",
  "Buffer.isReadOnly": "Returns false when the buffer can be written to.",
  "Buffer.length": "Returns the length of a Buffer object.",
  "Buffer.packAt": "Writes numbers to the buffer according to the format",
  "Buffer.rotate": "Rotate buffer left in place.\n\n\n\nstart. eg: -1",
  "Buffer.rotate|param|length": "number of elements in buffer. If negative, length is set as the buffer length minus",
  "Buffer.rotate|param|offset": "number of bytes to shift; use negative value to shift right",
  "Buffer.rotate|param|start": "start offset in buffer. Default is 0.",
  "Buffer.setNumber": "Write a number in specified format in the buffer.",
  "Buffer.setUint8": "Writes an unsigned byte at a particular location",
  "Buffer.shift": "Shift buffer left in place, with zero padding.\n\n\n\nstart. eg: -1",
  "Buffer.shift|param|length": "number of elements in buffer. If negative, length is set as the buffer length minus",
  "Buffer.shift|param|offset": "number of bytes to shift; use negative value to shift right",
  "Buffer.shift|param|start": "start offset in buffer. Default is 0.",
  "Buffer.sizeOfNumberFormat": "Get the size in bytes of specified number format.",
  "Buffer.slice": "Return a copy of a fragment of a buffer.",
  "Buffer.toArray": "Read contents of buffer as an array in specified format",
  "Buffer.toHex": "Convert a buffer to its hexadecimal representation.",
  "Buffer.toString": "Convert a buffer to string assuming UTF8 encoding",
  "Buffer.unpack": "Reads numbers from the buffer according to the format",
  "Buffer.write": "Write contents of `src` at `dstOffset` in current buffer.",
  "Colors": "Well known colors",
  "EventCreationMode": "How to create the event.",
  "EventCreationMode.CreateAndFire": "MicroBitEvent is initialised, and its event handlers are immediately fired (not suitable for use in interrupts!).",
  "EventCreationMode.CreateOnly": "MicroBitEvent is initialised, and no further processing takes place.",
  "Gesture.EightG": "Raised when a 8G shock is detected",
  "Gesture.FreeFall": "Raised when the board is falling!",
  "Gesture.LogoDown": "Raised when the logo is downward and the screen is vertical",
  "Gesture.LogoUp": "Raised when the logo is upward and the screen is vertical",
  "Gesture.ScreenDown": "Raised when the screen is pointing down and the board is horizontal",
  "Gesture.ScreenUp": "Raised when the screen is pointing up and the board is horizontal",
  "Gesture.Shake": "Raised when shaken",
  "Gesture.SixG": "Raised when a 6G shock is detected",
  "Gesture.ThreeG": "Raised when a 3G shock is detected",
  "Gesture.TiltLeft": "Raised when the screen is pointing left",
  "Gesture.TiltRight": "Raised when the screen is pointing right",
  "Image.clear": "Sets all pixels off.",
  "Image.height": "Gets the height in rows (always 5)",
  "Image.pixel": "Get the pixel state at position ``(x,y)``",
  "Image.pixelBrightness": "Gets the pixel brightness ([0..255]) at a given position",
  "Image.pixel|param|x": "pixel column",
  "Image.pixel|param|y": "pixel row",
  "Image.plotFrame": "Draws the ``index``-th frame of the image on the screen.",
  "Image.plotFrame|param|xOffset": "column index to start displaying the image",
  "Image.plotImage": "Plots the image at a given column to the screen",
  "Image.scrollImage": "Scrolls an image .",
  "Image.scrollImage|param|frameOffset": "x offset moved on each animation step, eg: 1, 2, 5",
  "Image.scrollImage|param|interval": "time between each animation step in milli seconds, eg: 200",
  "Image.setPixel": "Set a pixel state at position ``(x,y)``",
  "Image.setPixelBrightness": "Sets a specific pixel brightness at a given position",
  "Image.setPixel|param|value": "pixel state",
  "Image.setPixel|param|x": "pixel column",
  "Image.setPixel|param|y": "pixel row",
  "Image.showFrame": "Show a particular frame of the image strip.",
  "Image.showFrame|param|frame": "image frame to show",
  "Image.showImage": "Shows an frame from the image at offset ``x offset``.",
  "Image.showImage|param|interval": "time in milliseconds to pause after drawing",
  "Image.showImage|param|xOffset": "column index to start displaying the image",
  "Image.width": "Gets the width in columns",
  "Infinity": "Constant representing positive infinity.",
  "JSON.parse": "Converts a JavaScript Object Notation (JSON) string into an object.",
  "JSON.stringify": "Converts a JavaScript value to a JavaScript Object Notation (JSON) string.",
  "JSON.stringify|param|indent": "Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.",
  "JSON.stringify|param|replacer": "Not supported; use null.",
  "JSON.stringify|param|value": "A JavaScript value, usually an object or array, to be converted.",
  "Math": "More complex operations with numbers.",
  "Math.abs": "Gibt den absoluten Wert einer Zahl aus (den Wert unabhängig davon, ob er positiv oder negativ ist).\nDer absolute Wert von -5 ist zum Beispiel der gleiche wie der von 5.",
  "Math.abs|param|x": "Ein numerischer Ausdruck, für den der absolute Wert benötigt wird.",
  "Math.acos": "Returns the arccosine (in radians) of a number",
  "Math.acos|param|x": "A number",
  "Math.asin": "Returns the arcsine (in radians) of a number",
  "Math.asin|param|x": "A number",
  "Math.atan": "Returns the arctangent (in radians) of a number",
  "Math.atan2": "Returns the arctangent of the quotient of its arguments.",
  "Math.atan2|param|x": "A number",
  "Math.atan2|param|y": "A number",
  "Math.atan|param|x": "A number",
  "Math.ceil": "Returns the smallest number greater than or equal to its numeric argument.",
  "Math.ceil|param|x": "A numeric expression.",
  "Math.constrain": "Constrains a number to be within a range",
  "Math.cos": "Returns the cosine of a number.",
  "Math.cos|param|x": "An angle in radians",
  "Math.exp": "Returns returns ``e^x``.",
  "Math.exp|param|x": "A number",
  "Math.floor": "Returns the greatest number less than or equal to its numeric argument.",
  "Math.floor|param|x": "A numeric expression.",
  "Math.icos": "Returns the cosine of an input angle. This is an 8-bit approximation.",
  "Math.icos|param|theta": "input angle from 0-255",
  "Math.idiv": "Returns the value of integer signed 32 bit division of two numbers.",
  "Math.idiv|param|x": "The first number",
  "Math.idiv|param|y": "The second number",
  "Math.imul": "Returns the value of integer signed 32 bit multiplication of two numbers.",
  "Math.imul|param|x": "The first number",
  "Math.imul|param|y": "The second number",
  "Math.isin": "Returns the sine of an input angle. This is an 8-bit approximation.",
  "Math.isin|param|theta": "input angle from 0-255",
  "Math.log": "Returns the natural logarithm (base e) of a number.",
  "Math.log|param|x": "A number",
  "Math.map": "Re-maps a number from one range to another. That is, a value of ``from low`` would get mapped to ``to low``, a value of ``from high`` to ``to high``, values in-between to values in-between, etc.",
  "Math.map|param|fromHigh": "the upper bound of the value's current range, eg: 1023",
  "Math.map|param|fromLow": "the lower bound of the value's current range",
  "Math.map|param|toHigh": "the upper bound of the value's target range, eg: 4",
  "Math.map|param|toLow": "the lower bound of the value's target range",
  "Math.map|param|value": "value to map in ranges",
  "Math.max": "Gibt den größeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.min": "Gibt den niedrigeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.pow": "Gibt den Wert eines grundlegenden Ausdrucks bis zu einer bestimmten Stärke aus.",
  "Math.pow|param|x": "Der Basiswert des Ausdrucks.",
  "Math.pow|param|y": "Der exponentielle Wert des Ausdrucks.",
  "Math.random": "Gibt eine pseudozufüllige Zahl zwischen 0 und `max`aus.",
  "Math.randomBoolean": "Erzeugt zufällig einen \"wahr\" oder \"falsch\"-Wert, wie bei einem Münzwurf.",
  "Math.randomRange": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "Math.randomRange|param|max": "the upper inclusive bound, eg: 10",
  "Math.randomRange|param|min": "the lower inclusive bound, eg: 0",
  "Math.round": "Returns a supplied numeric expression rounded to the nearest number.",
  "Math.roundWithPrecision": "Rounds ``x`` to a number with the given number of ``digits``",
  "Math.roundWithPrecision|param|digits": "the number of resulting digits",
  "Math.roundWithPrecision|param|x": "the number to round",
  "Math.round|param|x": "The value to be rounded to the nearest number.",
  "Math.sign": "Gibt das Vorzeichen von x aus und zeigt an, ob dieses positiv, negativ oder null ist.",
  "Math.sign|param|x": "Der numerische Ausdruck, der getestet werden soll",
  "Math.sin": "Returns the sine of a number.",
  "Math.sin|param|x": "An angle in radians",
  "Math.sqrt": "Gibt die Quadratwurzel einer Zahl aus.",
  "Math.sqrt|param|x": "Ein numerischer Ausdruck.",
  "Math.tan": "Returns the tangent of a number.",
  "Math.tan|param|x": "An angle in radians",
  "Math.trunc": "Returns the number with the decimal part truncated.",
  "Math.trunc|param|x": "A numeric expression.",
  "NaN": "Constant representing Not-A-Number.",
  "Number.isNaN": "Check if a given value is of type Number and it is a NaN.",
  "Number.toString": "Returns a string representation of a number.",
  "Object.keys": "Return the field names in an object.",
  "String": "Combine, split, and search text strings.",
  "String.charAt": "Gibt den Buchstaben beim angegebenen Index aus.",
  "String.charAt|param|index": "Der null-basierte index des gewünschten Zeichens.",
  "String.charCodeAt": "Gibt den Unicode-Wert des Zeichens am vorgegebenen Ort aus.",
  "String.charCodeAt|param|index": "Der null-basierte Index des gewünschten Zeichens. Wenn kein Zeichen am angegeben Index vorhanden ist, wird NaN ausgegeben.",
  "String.compare": "Bestimmt die relative Reihenfolge zweier Strings (in ASCII).",
  "String.compare|param|that": "Zeichenfolge, die mit der Zielzeichenfolge verglichen werden soll",
  "String.concat": "Gibt eine Zeichenfolge aus, die die Verkettung von zwei oder mehr Zeichenfolgen ist.",
  "String.concat|param|other": "Die Zeichenfolge, die an das Ende einer Zeichenfolge angehängt werden soll.",
  "String.fromCharCode": "Erstelle Sie eine Zeichenfolge aus dem angegebenen ASCII-Zeichencode.",
  "String.includes": "Determines whether a string contains the characters of a specified string.",
  "String.includes|param|searchValue": "the text to find",
  "String.includes|param|start": "optional start index for the search",
  "String.indexOf": "Returns the position of the first occurrence of a specified value in a string.",
  "String.indexOf|param|searchValue": "the text to find",
  "String.indexOf|param|start": "optional start index for the search",
  "String.isEmpty": "Gibt einen Wert aus, der anzeigt, ob die Zeichenfolge leer ist",
  "String.length": "Gibt die Länge einer Zeichenfolge aus.",
  "String.replace": "Return the current string with the first occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll": "Return the current string with each occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replaceAll|param|toReplace": "the substring to replace in the current string",
  "String.replace|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replace|param|toReplace": "the substring to replace in the current string",
  "String.slice": "Return a substring of the current string.",
  "String.slice|param|end": "one-past-last character index",
  "String.slice|param|start": "first character index; can be negative from counting from the end, eg:0",
  "String.split": "Splits the string according to the separators",
  "String.split|param|separator": "@param limit",
  "String.substr": "Gibt eine Teilzeichenfolge der aktuellen Zeichenfolge aus.",
  "String.substr|param|length": "Anzahl der zu extrahierenden Zeichen",
  "String.substr|param|start": "Erster Zeichenindex, kann beim zählen vom Ende negativ sein, zum Beispiel: 0",
  "String.toLowerCase": "Converts the string to lower case characters.",
  "String.trim": "Return a substring of the current string with whitespace removed from both ends",
  "String@type": "Combine, split, and search text strings.",
  "StringMap": "A dictionary from string key to string values",
  "_py.range": "Returns a sequence of numbers up to but not including the limit\n\nIf more than one argument is passed, this argument is instead used for the first value in the range",
  "_py.range|param|first": "The value to end the sequence before. This value will not show up in the result.",
  "_py.range|param|step": "The value to increase or decrease by for each step in the range. Must be a nonzero integer",
  "_py.range|param|stop": "The value to end the sequence before. This value will not show up in the result",
  "_py.slice": "Returns a section of an array according to python's extended slice syntax",
  "_py.stringSlice": "Returns a section of a string according to python's extended slice syntax",
  "basic": "Bietet Zugriff auf grundlegende mini-Funktionalität.",
  "basic.clearScreen": "Schalte alle LEDs aus",
  "basic.color": "Konvertiert den Farbnamen in eine Nummer",
  "basic.forever": "Wiederholt immer wieder den Code im Hintergrund. Bei jeder Iteration ist es möglich, anderen Code auszuführen.",
  "basic.pause": "Pausiere für die angegebene Zeit in Millisekunden",
  "basic.pause|param|ms": "wie lange pausieren, z.B.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.plotLeds|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.rgb": "Konvertiert Rot-, Grün- und Blau-Kanäle in eine RGB-Farbe",
  "basic.rgb|param|blue": "Blauwert zwischen 0 und 255, z.B. 255",
  "basic.rgb|param|green": "Grünwert zwischen 0 und 255, z.B. 255",
  "basic.rgb|param|red": "Rotwert zwischen 0 und 255, z.B. 255",
  "basic.setLedColor": "Legt die Farbe der eingebauten LED fest. Setze auf 0, um diese abzuschalten.",
  "basic.showAnimation": "Zeigt eine Abfolge von LED-Anzeigen als Animation.",
  "basic.showAnimation|param|interval": "Zeit in Millisekunden zwischen jedem Neuzeichnen",
  "basic.showAnimation|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showArrow": "Draws an arrow on the LED screen",
  "basic.showArrow|param|direction": "the direction of the arrow",
  "basic.showArrow|param|interval": "the amount of time (milliseconds) to show the icon. Default is 600.",
  "basic.showCompass": "Draws needle on the screen which always points to north",
  "basic.showCompass|param|interval": "the amount of time (milliseconds) to show the needle. Default is 600.",
  "basic.showIcon": "Draws the selected icon on the LED screen",
  "basic.showIcon|param|icon": "the predefined icon id",
  "basic.showIcon|param|interval": "the amount of time (milliseconds) to block the LED Matrix for showing the icon. Default is 600.",
  "basic.showLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.showLeds|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "basic.showLeds|param|leds": "Muster der LEDs, die ein- und ausgeschaltet werden",
  "basic.showNumber": "Zeige eine Nummer auf dem Display. Wenn die Nummer auf das Display passt (es sich also um eine einstellige Zahl handelt), scrolle nicht weiter.",
  "basic.showNumber|param|interval": "Scroll-Geschwindigkeit; z.B. 150, 100, 200,-100",
  "basic.showString": "Zeige Text auf dem Display an, Buchstabe für Buchstabe. Wenn die Zeichenfolge in das Display passt (also wenn es sich um einen einzelnen Buchstaben handelt), scrolle nicht weiter.",
  "basic.showString|param|interval": "Wie schnell die Zeichen geändert werden; z.B. 150, 100, 200,-100",
  "basic.showString|param|text": "Text auf dem Bildschirm dargestellt werden soll, z.B.: \"Hi!\"",
  "basic.turnRgbLedOff": "Sets the color on the build-in LED. Set to 0 to turn off.",
  "console": "Reading and writing data to the console output.",
  "console.addListener": "Adds a listener for the log messages",
  "console.inspect": "Convert any object or value to a string representation",
  "console.inspect|param|maxElements": "[optional] max number values in an object to include in output",
  "console.inspect|param|obj": "value to be converted to a string",
  "console.log": "Write a line of text to the console output.",
  "console.logValue": "Write a name:value pair as a line of text to the console output.",
  "console.logValue|param|name": "name of the value stream, eg: \"x\"",
  "console.logValue|param|value": "to write",
  "console.log|param|value": "to send",
  "console.minPriority": "Minimum priority to send messages to listeners",
  "console.removeListener": "Removes a listener",
  "control": "Laufzeit- und Event-Dienstprogramme.",
  "control.allocateNotifyEvent": "Allocates the next user notification event",
  "control.assert": "Wenn die Bedingung falsch ist, zeige eine Nachricht auf der seriellen Konsole und gebe Panic-Code 098 aus",
  "control.benchmark": "Runs the function and returns run time in microseconds.",
  "control.createBuffer": "Create a new zero-initialized buffer.",
  "control.createBufferFromUTF8": "Create a new buffer with UTF8-encoded string",
  "control.createBufferFromUTF8|param|str": "the string to put in the buffer",
  "control.createBuffer|param|size": "number of bytes in the buffer",
  "control.deviceLongSerialNumber": "Derive a unique, consistent 64-bit serial number of this device from internal data.",
  "control.deviceName": "Erzeugt einen Namen für das Gerät, basierend auf der Seriennummer",
  "control.deviceSerialNumber": "Derive a unique, consistent serial number of this device from internal data.",
  "control.dmesg": "Write a message to DMESG debugging buffer.",
  "control.dmesgPerfCounters": "Dump values of profiling performance counters.",
  "control.dmesgPtr": "Write a message and value (pointer) to DMESG debugging buffer.",
  "control.enablePerfCounter": "Enable profiling for current function.",
  "control.eventSourceId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.eventTimestamp": "Holt den Zeitstempel des letzten Events auf dem Bus",
  "control.eventValue": "Holt den Wert des letzten ausgeführten Events auf dem Bus",
  "control.eventValueId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.gc": "Force GC and dump basic information about heap.",
  "control.gcStats": "Get various statistics about the garbage collector (GC)",
  "control.heapDump": "Force GC and halt waiting for debugger to do a full heap dump.",
  "control.heapSnapshot": "Record a heap snapshot to debug memory leaks.",
  "control.inBackground": "Plant Code, der im Hintergrund wiedergegeben wird.",
  "control.micros": "Gets current time in microseconds. Overflows every ~18 minutes.",
  "control.millis": "Gets the number of milliseconds elapsed since power on.",
  "control.onEvent": "Startet ein Event auf dem Event-Bus.",
  "control.panic": "Zeigt einen spezifizierten Fehlercode und hält das Programm an.",
  "control.profilingEnabled": "Return true if profiling is enabled in the current build.",
  "control.raiseEvent": "Startet ein Event auf dem Event-Bus.",
  "control.raiseEvent|param|mode": "optionale Definition davon, wie ein Event nach dem Erstellen ausgeführt wird (Standard ist \"CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID der Calliope mini-Komponente, die das Event generiert hat, zum Beispiel CALLIOPE_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Komponentenspezifischer Code, der den Grund des Events angibt.",
  "control.ramSize": "Returns estimated size of memory in bytes.",
  "control.reset": "Setzt den mini zurück.",
  "control.runInParallel": "Run other code in the parallel.",
  "control.runtimeWarning": "Zeige Warnmeldung im Simulator.",
  "control.setDebugFlags": "Set flags used when connecting an external debugger.",
  "control.simmessages.onReceived": "Registers the handler for a message on a given channel",
  "control.waitForEvent": "Blocks the calling thread until the specified event is raised.",
  "control.waitMicros": "Sperrt die aktuelle Leitung für die Dauer der angegebenen Mikrosekunden",
  "control.waitMicros|param|micros": "Anzahl der Mikrosekunden, die gewartet werden soll, z.B.: 4",
  "convertToText": "Convert any value to text",
  "convertToText|param|value": "value to be converted to text",
  "forever": "Repeats the code forever in the background. On each iteration, allows other codes to run.",
  "game": "Eine Einzel-LED-Sprite-Spielumgebung",
  "game.LedSprite": "A game sprite rendered as a single LED",
  "game.LedSprite.blink": "Reports the ``blink`` duration of a sprite",
  "game.LedSprite.brightness": "Reports the ``brightness` of a sprite on the LED screen",
  "game.LedSprite.change": "Changes a property of the sprite",
  "game.LedSprite.changeBlinkBy": "Changes the ``blink`` duration by the given amount of millisecons",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Changes the ``y`` position by the given amount",
  "game.LedSprite.changeBrightnessBy|param|value": "the value to change brightness",
  "game.LedSprite.changeDirectionBy": "Changes the ``direction`` position by the given amount by turning right",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Changes the ``x`` position by the given amount",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Changes the ``y`` position by the given amount",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "the name of the property to change",
  "game.LedSprite.change|param|value": "amount of change, eg: 1",
  "game.LedSprite.delete": "Deletes the sprite from the game engine. The sprite will no longer appear on the screen or interact with other sprites.",
  "game.LedSprite.direction": "Reports the current direction of a sprite",
  "game.LedSprite.get": "Gets a property of the sprite",
  "game.LedSprite.get|param|property": "the name of the property to change",
  "game.LedSprite.goTo": "Go to this position on the screen",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "If touching the edge of the stage and facing towards it, then turn away.",
  "game.LedSprite.isDeleted": "Reports whether the sprite has been deleted from the game engine.",
  "game.LedSprite.isTouching": "Reports true if sprite has the same position as specified sprite",
  "game.LedSprite.isTouchingEdge": "Reports true if sprite is touching an edge",
  "game.LedSprite.isTouching|param|other": "the other sprite to check overlap or touch",
  "game.LedSprite.move": "Move a certain number of LEDs in the current direction",
  "game.LedSprite.move|param|leds": "number of leds to move, eg: 1, -1",
  "game.LedSprite.off": "Turns off the sprite (on by default)",
  "game.LedSprite.on": "Turns on the sprite (on by default)",
  "game.LedSprite.set": "Sets a property of the sprite",
  "game.LedSprite.setBlink": "Sets the blink duration interval in millisecond.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Set the ``brightness`` of a sprite",
  "game.LedSprite.setBrightness|param|brightness": "the brightness from 0 (off) to 255 (on), eg: 255.",
  "game.LedSprite.setDirection": "Set the direction of the current sprite, rounded to the nearest multiple of 45",
  "game.LedSprite.setDirection|param|degrees": "new direction in degrees",
  "game.LedSprite.setX": "Set the ``x`` position of a sprite",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Set the ``y`` position of a sprite",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "the name of the property to change",
  "game.LedSprite.turn": "Turn the sprite",
  "game.LedSprite.turnLeft": "Turn to the left (counter-clockwise)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Turn to the right (clockwise)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "angle in degrees to turn, eg: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "left or right",
  "game.LedSprite.x": "Reports the ``x`` position of a sprite on the LED screen",
  "game.LedSprite.y": "Reports the ``y`` position of a sprite on the LED screen",
  "game.addLife": "Fügt Leben zum aktuellen Spielstand hinzu",
  "game.addLife|param|lives": "amount of lives to add",
  "game.addScore": "Fügt zum aktuellen Spielstand Punkte hinzu",
  "game.addScore|param|points": "Anzahl von zu verändernden Punkten, z.B.: 1",
  "game.createSprite": "Erzeugt einen neuen LED-Sprite, der nach rechts zeigt.",
  "game.createSprite|param|x": "horizontale Koordinate des Sprites, z.B. 2",
  "game.createSprite|param|y": "vertikale Koordinate des Sprites, z.B. 2",
  "game.currentTime": "Ruft die verbliebene Zeit (seit `starte Countdown`) oder die aktuelle Zeit (seit das Gerät gestartet wurde oder eine Stoppuhr aktiviert wurde) an.",
  "game.gameOver": "Gibt über eine Animation ein Spiel wieder.",
  "game.invalidSprite": "Ruft einen invaliden Sprite ab; wird genutzt, um Locale zu initialisieren.",
  "game.isGameOver": "Zeigt an, ob das Spil die \"Game Over\"-Sequenz angezeigt hat.",
  "game.isPaused": "Indicates if the game rendering is paused to allow other animations",
  "game.isRunning": "Holt einen Wert, der anzeigt, ob das Spiel noch läuft. Gibt `falsch`aus, wenn das Spiel zu Ende ist.",
  "game.level": "Ruft das aktuelle Level ab",
  "game.levelUp": "Erhöht das Level und zeigt eine Nachricht an.",
  "game.life": "Ruft das aktuelle Leben ab",
  "game.pause": "Pauses the game rendering engine to allow other animations",
  "game.removeLife": "Entfernt ein Leben",
  "game.removeLife|param|life": "amount of life to remove",
  "game.resume": "Resumes the game rendering engine",
  "game.score": "Ruft den aktuellen Punktestand ab",
  "game.setLife": "Setzt den aktuellen Wert der Leben",
  "game.setLife|param|value": "current life value",
  "game.setScore": "Setzt den aktuellen Wert des Spielstands",
  "game.setScore|param|value": "new score value.",
  "game.showScore": "Zeigt den Spielstand auf dem Display.",
  "game.startCountdown": "Startet einen Spiel-Countdown",
  "game.startCountdown|param|ms": "Countdown-Dauer in Millisekunden, z.B.: 10000",
  "game.startStopwatch": "Startet eine Stoppuhr.`aktuelle Zeit`gibt die vergangene Zeit an.",
  "hex": "Tagged hex literal converter",
  "images": "Erstellung, Bearbeitung und Anzeige von LED-Bildern.",
  "images.createBigImage": "Erstellt ein Bild mit zwei Einzelbildern.",
  "images.createImage": "Erstellt ein Bild, das auf den LED-Bildschirm passt.",
  "input": "Ereignisse und Daten der Sensoren",
  "input.acceleration": "Holt den Beschleunigungswert in Milli-Erdanziehung (wenn das Board flach mit dem Display nach oben liegt, X = 0, y = 0 und Z =-1024)",
  "input.acceleration|param|dimension": "x, y, or z dimension, eg: Dimension.X",
  "input.assumeCalibrationCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.buttonEventClick": "Returns the ID of an Click Event",
  "input.buttonEventDown": "Returns the ID of an Down Event",
  "input.buttonEventValue": "Returns the ID of an Button Event",
  "input.buttonIsPressed": "Get the button state (pressed or not) for ``A`` and ``B``.",
  "input.buttonIsPressed|param|button": "the button to query the request, eg: Button.A",
  "input.calibrateCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.clearCalibrationCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.compassHeading": "Holt die aktuelle Kompassrichtung in Grad.",
  "input.isCalibratedCompass": "Returns 'true' when the compass is calibrated. Otherwise returns 'false'.",
  "input.isGesture": "Tests if a gesture is currently detected.",
  "input.isGesture|param|gesture": "the type of gesture to detect, eg: Gesture.Shake",
  "input.lightLevel": "Liest die Lichtintensität auf dem LED-Bildschirm im Bereich von ``0`` (dunkel) und `` 255`` (hell).",
    "input.magneticForce": "Ruft den Wert der Magnetkraft in ``Mikro-Tesla`` (``µT``) ab. Diese Funktion wird im Simulator nicht unterstützt.",
  "input.magneticForce|param|dimension": "the x, y, or z dimension, eg: Dimension.X",
  "input.onButtonEvent": "Do something when a button (A, B or both A+B) receives an event.",
  "input.onButtonEvent|param|body": "code to run when event is raised",
  "input.onButtonEvent|param|button": "the button",
  "input.onButtonEvent|param|eventType": "event Type",
  "input.onButtonPressed": "Tue etwas, wenn eine Taste (``A``, ``B`` oder ``A + B``) gedrückt wird",
  "input.onButtonPressed|param|body": "code to run when event is raised",
  "input.onButtonPressed|param|button": "the button that needs to be pressed",
  "input.onGesture": "Mache etwas, wenn eine Geste gemacht wird (wie den mini zu schütteln).",
  "input.onGesture|param|body": "code to run when gesture is raised",
  "input.onGesture|param|gesture": "the type of gesture to track, eg: Gesture.Shake",
  "input.onPinPressed": "Mache etwas, wenn eine Pin gehalten wird.",
  "input.onPinPressed|param|body": "Code, der ausführt wird, wenn ein Pin gehalten wird",
  "input.onPinPressed|param|name": "the pin that needs to be pressed, eg: TouchPin.P0",
  "input.onPinReleased": "Mache etwas, wenn der Pin losgelassen wird.",
  "input.onPinReleased|param|body": "Code, der ausgeführt werden soll, wenn der Pin losgelassen wird",
  "input.onPinReleased|param|name": "the pin that needs to be released, eg: TouchPin.P0",
  "input.onPinTouchEvent": "Do something when a pin receives an touch event (while also touching the GND pin).",
  "input.onPinTouchEvent|param|body": "the code to run when event is fired on pin",
  "input.onPinTouchEvent|param|name": "the pin, eg: TouchPin.P0",
  "input.pinIsPressed": "Ruft den Pin-Zustand (gehalten oder nicht) ab. Die Erdung muss gehalten werden, um den Stromkreis zu schließen.",
  "input.pinIsPressed|param|name": "pin used to detect the touch, eg: TouchPin.P0",
  "input.rotation": "Die Neigung und Drehung des mini Drehung auf ``X-Achse``oder ``Y-Achse``, in Grad.",
  "input.rotation|param|kind": "pitch or roll",
  "input.runningTime": "Ruft die Anzahl der Millisekunden auf, die seit dem Einschalten vergangen sind.",
  "input.runningTimeMicros": "Gets the number of microseconds elapsed since power on.",
  "input.setAccelerometerRange": "Legt die Stichprobenbereich des Beschleunigungssensors in Schwerkraft fest.",
  "input.setAccelerometerRange|param|range": "Ein Wert, der die maximale Stärke der gemessenen Beschleunigung beschreibt",
  "input.soundLevel": "gets the level of loudness from 0 (silent) to 255 (loud)",
  "input.temperature": "Ruft die aktuelle Temperatur in Grad Celsius (°C) ab.",
  "led": "Steuerung des LED-Bildschirms.",
  "led.brightness": "Ruft die Helligkeit des Bildschirms ab, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.displayMode": "Gets the current display mode",
  "led.enable": "Schaltet das Display an und aus",
  "led.fadeIn": "Blendet die Bildschirmanzeige ein.",
  "led.fadeIn|param|ms": "fade time in milleseconds",
  "led.fadeOut": "Blendet die Bildschirmhelligkeit aus.",
  "led.fadeOut|param|ms": "fade time in milliseconds",
  "led.plot": "Schalte die angegebene LED mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotAll": "Schaltet alle LEDs an",
  "led.plotBarGraph": "Zeigt ein vertikales Balkendiagramm an, basierend auf dem `Wert`und dem `Hoch`-Wert. Wenn `Hoch`0 ist, wird das Diagramm automatisch angepasst.",
  "led.plotBarGraph|param|high": "maximalen Wert. Wenn dieser 0 ist, wird der Maximalwert automatisch angepasst, z.B.: 0",
  "led.plotBarGraph|param|value": "aktueller Wert zum Darstellen",
  "led.plotBrightness": "Turn on the specified LED with specific brightness using x, y coordinates (x is horizontal, y is vertical). (0,0) is upper left.",
  "led.plotBrightness|param|brightness": "the brightness from 0 (off) to 255 (bright), eg:255",
  "led.plotBrightness|param|x": "the horizontal coordinate of the LED starting at 0",
  "led.plotBrightness|param|y": "the vertical coordinate of the LED starting at 0",
  "led.plot|param|x": "the horizontal coordinate of the LED starting at 0",
  "led.plot|param|y": "the vertical coordinate of the LED starting at 0",
  "led.point": "Ruft den An/Aus-Status einer vorgegebenen LED mittels X-/Y-Koordinaten ab. (0,0) ist oben links.",
  "led.pointBrightness": "Get the brightness state of the specified LED using x, y coordinates. (0,0) is upper left.",
  "led.pointBrightness|param|x": "the horizontal coordinate of the LED",
  "led.pointBrightness|param|y": "the vertical coordinate of the LED",
  "led.point|param|x": "the horizontal coordinate of the LED",
  "led.point|param|y": "the vertical coordinate of the LED",
  "led.screenshot": "Macht einen Screenshot vom LED-Bildschirm und gibt ein Bild aus.",
  "led.setBrightness": "Lege die Helligkeit des Bildschirms fest, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.setBrightness|param|value": "Helligkeitswert, z.B.: 255, 127, 0",
  "led.setDisplayMode": "Legt den Anzeigemodus von Wiedergabe-LEDs zwischen Schwarz und Weiß und Graustufen fest.",
  "led.setDisplayMode|param|mode": "TODO",
  "led.stopAnimation": "Bricht die aktuelle Animation ab und löscht andere ausstehende Animationen.",
  "led.toggle": "Schaltet ein bestimmtes Pixel ein",
  "led.toggleAll": "Invertiert die aktuelle LED-Anzeige",
  "led.toggle|param|x": "pixel column",
  "led.toggle|param|y": "pixel row",
  "led.unplot": "Schalte die angegebene LED mit x-und y-Koordinaten ab (X ist horizontal, y ist vertikal). (0,0) ist oben links.",
  "led.unplot|param|x": "the horizontal coordinate of the LED",
  "led.unplot|param|y": "the vertical coordinate of the LED",
  "light.sendWS2812Buffer": "Sends a color buffer to a light strip",
  "light.sendWS2812BufferWithBrightness": "Sends a color buffer to a light strip",
  "light.setMode": "Sets the light mode of a pin",
  "loops.everyInterval": "Repeats the code forever in the background.\nAfter each iteration, allows other codes to run for a set duration\nso that it runs on a timer",
  "loops.everyInterval|param|interval": "time (in ms) to wait between each iteration of the action.",
  "motors": "Blöcke, die genutzt werden, um Onboard-Motoren zu steuern",
  "motors.dualMotorPower": "Steuert zwei an das Board angeschlossene Motoren. Schaltet auf Dual-Motor-Modus um!",
  "motors.motorCommand": "Schicke Anhalten, Ausrollen oder Anhalten-Befehle an den Motor. Hat im Dual-Motor-Modus keinen Effekt.",
  "motors.motorPower": "Schaltet den Motor bei einer bestimmten Prozentzahl der Kraft an. Schaltet um auf den Single-Motor-Modus!",
  "motors.motorPower|param|power": "%percent der Kraft, die an den Motor geschickt wird. Negative Werte laufen rückwärts, z.B. 50",
  "msgpack.packNumberArray": "Pack a number array into a buffer.",
  "msgpack.packNumberArray|param|nums": "the numbers to be packed",
  "msgpack.unpackNumberArray": "Unpacks a buffer into a number array.",
  "music": "Generierung von Musik",
  "music.beat": "Gibt die Dauer eines Taktes in Milli-Sekunden aus",
  "music.beginMelody": "Use startMelody instead",
  "music.builtInMelody": "Gets the melody array of a built-in melody.",
  "music.changeTempoBy": "Ändere die Geschwindigkeit um den angegebenen Betrag",
  "music.changeTempoBy|param|bpm": "Die Änderung in Schlägen pro Minute auf das Tempo, z.B.: 20",
  "music.melodyEditor": "Create a melody with the melody editor.",
  "music.noteFrequency": "Ruft die Frequenz einer Note ab.",
  "music.noteFrequency|param|name": "the note name",
  "music.onEvent": "Registers code to run on various melody events",
  "music.playMelody": "Play a melody from the melody editor.",
  "music.playMelody|param|melody": "- string of up to eight notes [C D E F G A B C5] or rests [-] separated by spaces, which will be played one at a time, ex: \"E D G F B A C5 B \"",
  "music.playMelody|param|tempo": "- number in beats per minute (bpm), dictating how long each note will play for",
  "music.playTone": "Spielt einen Ton für den angegebenen Zeitraum auf dem Lautsprecher ab.",
  "music.playTone|param|frequency": "pitch of the tone to play in Hertz (Hz), eg: Note.C",
  "music.playTone|param|ms": "Tondauer in Millisekunden (ms)",
  "music.rest": "Ruht (spielt nichts) für eine bestimmte Zeit auf Pin ``P0``.",
  "music.rest|param|ms": "Restdauer in Millisekunden (ms)",
  "music.ringTone": "Spielt einen Ton durch den Lautsprecher ab.",
  "music.ringTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.setPlayTone": "Sets a custom playTone function for playing melodies",
  "music.setTempo": "Legt die Geschwindigkeit auf den angegebenen Wert fest.",
  "music.setTempo|param|bpm": "Die neue Geschwindigkeit in Schlägen pro Minute, z.B.: 120",
  "music.setVolume": "Set the default output volume of the sound synthesizer.",
  "music.setVolume|param|volume": "the volume 0...255",
  "music.speakerPlayTone": "Plays a tone through ``speaker`` for the given duration.",
  "music.speakerPlayTone|param|frequency": "pitch of the tone to play in Hertz (Hz)",
  "music.speakerPlayTone|param|ms": "tone duration in milliseconds (ms)",
  "music.startMelody": "Starts playing a melody.\nNotes are expressed as a string of characters with this format: NOTE[octave][:duration]",
  "music.startMelody|param|melodyArray": "the melody array to play",
  "music.startMelody|param|options": "melody options, once / forever, in the foreground / background",
  "music.stopAllSounds": "Stop all sounds and melodies currently playing.",
  "music.stopMelody": "Stops the melodies",
  "music.stopMelody|param|options": "which melody to stop",
  "music.tempo": "Gibt die Geschwindigkeit in Schlägen pro Minute aus. Die Geschwindigkeit ist Schnelligkeit (Bpm = Beats pro Minute), in der Töne abgespielt werden. Je größer der Wert, desto schneller werden die Töne abgespielt.",
  "music.volume": "Returns the current output volume of the sound synthesizer.",
  "parseFloat": "Convert a string to a number.",
  "parseInt": "Convert a string to an integer.\n\n\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
  "parseInt|param|radix": "optional A value between 2 and 36 that specifies the base of the number in text.",
  "parseInt|param|text": "A string to convert into an integral number. eg: \"123\"",
  "pause": "Pause for the specified time in milliseconds",
  "pauseUntil": "Busy wait for a condition to be true",
  "pauseUntil|param|condition": "condition to test for",
  "pauseUntil|param|timeOut": "if positive, maximum duration to wait for in milliseconds",
  "pause|param|ms": "how long to pause for, eg: 100, 200, 500, 1000, 2000",
  "pins": "Steuere die Stromstärke über die Pins für analoge/digitale Signale, Servos, I2C,...",
  "pins.C10": "Pin C10",
  "pins.C11": "Pin C11",
  "pins.C12": "Pin C12",
  "pins.C16": "Pin C16",
  "pins.C17": "Pin C17",
  "pins.C18": "Pin C18",
  "pins.C4": "Pin C4",
  "pins.C5": "Pin C5",
  "pins.C6": "Pin C6",
  "pins.C7": "Pin C7",
  "pins.C8": "Pin C8",
  "pins.C9": "Pin C9",
  "pins.P0": "Pin P0",
  "pins.P1": "Pin P1",
  "pins.P2": "Pin P2",
  "pins.P3": "Pin P3",
  "pins.analogPitch": "Gibt ein Pulsweiten Modulation (PWM)-Signal über den aktuellen Pitch-Pin. Benutze `analog set pitch pin`, um den Pitch-Pin festzulegen.",
  "pins.analogPitchVolume": "Gets the volume the pitch pin from 0..255",
  "pins.analogPitch|param|frequency": "frequency to modulate in Hz.",
  "pins.analogPitch|param|ms": "duration of the pitch in milli seconds.",
  "pins.analogReadPin": "Lese den Anschlusswert als Analog aus, d. h. als einen Wert zwischen 0 und 1023.",
  "pins.analogReadPin|param|name": "pin to write to, eg: AnalogPin.P1",
  "pins.analogSetPeriod": "Stellt die Pulsweite Modulation (PWM) des Analogausganges auf den angegebenen Wert in ** Mikrosekunden ** oder `1/1000` Millisekunden ein.\nWenn dieser Pin nicht als einen Analogausgang (mit `analog write pin`) konfiguriert ist, hat der Vorgang keine Auswirkungen.",
  "pins.analogSetPeriod|param|micros": "Zeit in Mikrosekunden. z.B.: 20000",
  "pins.analogSetPeriod|param|name": "analog pin to set period to, eg: AnalogPin.P1",
  "pins.analogSetPitchPin": "Set the pin used when using analog pitch or music.",
  "pins.analogSetPitchPin|param|name": "pin to modulate pitch from",
  "pins.analogSetPitchVolume": "Sets the volume on the pitch pin",
  "pins.analogSetPitchVolume|param|volume": "the intensity of the sound from 0..255",
  "pins.analogWritePin": "Legt den Wert des Verbinders auf analog fest. Der Wert muss zwischen 0 und 1023 liegen.",
  "pins.analogWritePin|param|name": "pin name to write to, eg: AnalogPin.P1",
  "pins.analogWritePin|param|value": "Wert, der auf den Pin geschrieben werden soll, zwischen ``0`` und ``1023`` z.B.: 1023,0",
  "pins.createBuffer": "Erstellt einen Null-initialisierten Zwischenspeicher.",
  "pins.createBuffer|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "pins.digitalReadPin": "Lese den angegebene Pin oder Verbinder als 0 oder 1",
  "pins.digitalReadPin|param|name": "pin to read from, eg: DigitalPin.P0",
  "pins.digitalWritePin": "Setzt einen Pin- oder Verbinder-Wert auf 0 oder 1.",
  "pins.digitalWritePin|param|name": "pin to write to, eg: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "Wert, der auf dem Pin 1 gesetzt werden soll, z.B. 0",
  "pins.i2cReadBuffer": "Lese `Größe`bytes aus einer 7-bit I2C-Adresse.",
  "pins.i2cReadNumber": "Lese eine Nummer aus einer 7-bit I2C-Adresse.",
  "pins.i2cWriteBuffer": "Schreibt Bytes in eine 7-bit I2C-Adresse.",
  "pins.i2cWriteNumber": "Schreibe eine Nummer in eine 7-bit I2C-Adresse.",
  "pins.map": "Definiert eine Nummer von einer Auswahl zu einer anderen um. Ein Wert ``von niedrig``wird so auf ``zu niedrig``umgeändert, ein Wert ``von hoch`` zu ``zu hoch`` etc.",
  "pins.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "pins.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "pins.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "pins.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "pins.map|param|value": "Wert in Bereichen zuordnen",
  "pins.onPulsed": "Stellt diesen Pin als einen Digitaleingang ein und generiert Ereignisse, deren Zeitstempel die Dauer darstellt, in der der Pin entweder ``hoch``oder ``niedrig``war.",
  "pins.onPulsed|param|name": "digital pin to register to, eg: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "the value of the pulse, eg: PulseValue.High",
  "pins.pulseDuration": "Ruft die Dauer des letzten Impulses in Mikrosendungen ab. Diese Funktion soll von einem `onPulsed`-Handler aufgerufen werden.",
  "pins.pulseIn": "Gibt die Dauer eines Pulses in Mikrosekunden an",
  "pins.pulseIn|param|name": "der Pin, der den Puls misst",
  "pins.pulseIn|param|value": "der Wert des Pulses (Standard hoch)",
  "pins.pushButton": "Mounts a push button on the given pin",
  "pins.servoSetContinuous": "Specifies that a continuous servo is connected.",
  "pins.servoSetPulse": "Konfiguriert diesen IO-Pin als einen analogen/PWM-Ausgang, stellt den Zeitraum auf 20 ms ein und setzt die Pulsweite fest, basieren auf dem angegeben Wert **Mikrosekunden** oder `1/1000`Millisekunden.",
  "pins.servoSetPulse|param|micros": "Impulsdauer in Mikrosekunden, z.B.: 1500",
  "pins.servoSetPulse|param|name": "PIN-Name",
  "pins.servoWritePin": "Schreibt einen Wert in den Servo, der die Welle entsprechend kontroliert. Auf einem Standard-Servo wird so der Winkel der Welle (in Grad) eingestellt, sodass sich die Welle entsprechend anpasst. Auf einem kontinuierlich drehenden Servo wird dadurch die Geschwindigkeit des Servos festgelegt, wobei ``0``die volle Geschwindigkeit in eine Richtung darstellt, ``180``die volle Geschwindigkeit in die andere, und ein Wert von ``90`` einen Stillstand erzeugt.",
  "pins.servoWritePin|param|name": "pin to write to, eg: AnalogPin.P1",
  "pins.servoWritePin|param|value": "Winkel oder Rotationsbeschleunigung, z.B.: 180,90,0",
  "pins.setAudioPin": "Set the pin used when producing sounds and melodies. Default is P0.",
  "pins.setAudioPin|param|name": "pin to modulate pitch from",
  "pins.setEvents": "Configure the events emitted by this pin. Events can be subscribed to\nusing ``control.onEvent()``.",
  "pins.setEvents|param|name": "pin to set the event mode on, eg: DigitalPin.P0",
  "pins.setEvents|param|type": "the type of events for this pin to emit, eg: PinEventType.Edge",
  "pins.setMatrixWidth": "Set the matrix width for Neopixel strip (already assigned to a pin).\nShould be used in conjunction with `set matrix width` from Neopixel package.",
  "pins.setPull": "Stellt die Anziehungskraft des Pins ein.",
  "pins.setPull|param|name": "pin to set the pull mode on, eg: DigitalPin.P0",
  "pins.setPull|param|pull": "one of the mbed pull configurations, eg: PinPullMode.PullUp",
  "pins.spiFormat": "Set the SPI bits and mode",
  "pins.spiFormat|param|bits": "the number of bits, eg: 8",
  "pins.spiFormat|param|mode": "the mode, eg: 3",
  "pins.spiFrequency": "Set the SPI frequency",
  "pins.spiFrequency|param|frequency": "the clock frequency, eg: 1000000",
  "pins.spiPins": "Set the MOSI, MISO, SCK pins used by the SPI connection",
  "pins.spiTransfer": "Write to and read from the SPI slave at the same time",
  "pins.spiTransfer|param|command": "Data to be sent to the SPI slave (can be null)",
  "pins.spiTransfer|param|response": "Data received from the SPI slave (can be null)",
  "pins.spiWrite": "Schreibe in den SPI-Slave und gebe die Antwort aus",
  "pins.spiWrite|param|value": "Daten, die an den SPI-Slave geschickt werden sollen",
  "randint": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "randint|param|max": "the upper inclusive bound, eg: 10",
  "randint|param|min": "the lower inclusive bound, eg: 0",
  "serial": "Lesen und Schreiben von Daten über eine serielle Verbindung.",
  "serial.NEW_LINE": "The string used to mark a new line, default is \\r\\n",
  "serial.delimiters": "Gibt die mit dem Begrenzer korrespondierende Zeichenfolge aus.",
  "serial.onDataReceived": "Register an event to be fired when one of the delimiter is matched.",
  "serial.onDataReceived|param|delimiters": "the characters to match received characters against.",
  "serial.readBuffer": "Read multiple characters from the receive buffer. \nIf length is positive, pauses until enough characters are present.",
  "serial.readBuffer|param|length": "default buffer length",
  "serial.readLine": "Liest eine Textzeile aus der seriellen Schnittstelle.",
  "serial.readString": "Read the buffered received data as a string",
  "serial.readUntil": "Liest aus eine Textzeile aus dem seriellen Anschluss und gibt den Puffer aus, wenn die Begrenzung erreicht wurde.",
  "serial.readUntil|param|delimiter": "Text-Begrenzung, die die Textblöcke voneinander trennt",
  "serial.redirect": "Konfiguriert dynamisch die serielle Instanz, damit sie andere Pins als USBTX und USBRX benutzt.",
  "serial.redirectToUSB": "Direct the serial input and output to use the USB connection.",
  "serial.redirect|param|rate": "the new baud rate. eg: 115200",
  "serial.redirect|param|rx": "the new reception pin, eg: SerialPin.P1",
  "serial.redirect|param|tx": "the new transmission pin, eg: SerialPin.P0",
  "serial.setBaudRate": "Set the baud rate of the serial port",
  "serial.setRxBufferSize": "Sets the size of the RX buffer in bytes",
  "serial.setRxBufferSize|param|size": "length of the rx buffer in bytes, eg: 32",
  "serial.setTxBufferSize": "Sets the size of the TX buffer in bytes",
  "serial.setTxBufferSize|param|size": "length of the tx buffer in bytes, eg: 32",
  "serial.setWriteLinePadding": "Sets the padding length for lines sent with \"write line\".",
  "serial.setWriteLinePadding|param|length": "the number of bytes alignment, eg: 0",
  "serial.writeBuffer": "Send a buffer through serial connection",
  "serial.writeLine": "Gibt eine Zeile des Textes an die serielle",
  "serial.writeNumber": "Gibt einen numerischen Wert an die serielle",
  "serial.writeNumbers": "Print an array of numeric values as CSV to the serial port",
  "serial.writeString": "Sendet ein Stück Text über serielle Verbindung.",
  "serial.writeValue": "Schreibt ein ``Namen: Wert`` Wertepaar auf die serielle Schnittstelle.",
  "serial.writeValue|param|name": "Name des Wertestreams, z.B.: x",
  "serial.writeValue|param|value": "Schreiben",
  "storage": "Provides access to persistent storage functionality.\n\nProvides access to persistent storage functionality.",
  "storage.getNumber": "Reads a key value pair from the non volatile storage as a number",
  "storage.getNumber|param|key": "the key for accesing the value",
  "storage.getValueInt": "Reads a key value pair from the non volatile storage",
  "storage.getValueInt|param|key": "the key for accesing the value",
  "storage.putNumber": "Saves a key value pair in the non volatile storage",
  "storage.putNumber|param|key": "the key for accesing the value",
  "storage.putNumber|param|value": "value to store",
  "storage.putValueInt": "Saves a key value pair in the non volatile storage",
  "storage.putValueInt|param|key": "the key for accesing the value",
  "storage.putValueInt|param|value": "value to store",
  "storage.remove": "Removes a key value pair from the non volatile storage",
  "storage.removeNumber": "Deletes the key from the non volatile storage",
  "storage.removeNumber|param|key": "the key for accesing the value",
  "storage.remove|param|key": "the key for accesing the value"
}