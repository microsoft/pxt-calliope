{
  "AcceleratorRange.EightG": "Der Bewegungssensor misst Kräfte bis 8g",
  "AcceleratorRange.FourG": "Der Bewegungssensor misst Kräfte bis 4g",
  "AcceleratorRange.OneG": "Der Bewegungssensor misst Kräfte bis 1g",
  "AcceleratorRange.TwoG": "Der Bewegungssensor misst Kräfte bis 2g",
  "Array": "Hinzufügen, Entfernen und Ersetzen von Elementen in Listen.",
  "Array._pickRandom": "Gibt einen zufälligen Wert aus dem Array zurück",
  "Array._popStatement": "Entferne das letzte Element eines Arrays und gib es aus.",
  "Array._removeAtStatement": "Entferne das Element an einer bestimmten Position.",
  "Array._shiftStatement": "Entferne das erste Element aus einem Array und gib es aus. Durch diese Methode wird die Array-Länge verändert.",
  "Array._unshiftStatement": "Füge ein Element am Anfang eines Arrays hinzu und gib die neue Länge des Arrays aus.",
  "Array.concat": "Verknüpft die Werte mit einem anderen Array.",
  "Array.concat|param|arr": "Das andere Array, mit dem es verbunden ist",
  "Array.every": "Testet, ob alle Elemente in dem Array den von der bereitgestellten Funktion implementierten Test bestehen.",
  "Array.every|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die every-Methode ruft für jedes Element in dem Array die callbackfn-Funktion einmal auf.",
  "Array.fill": "Füllt alle Elemente eines Arrays von einem Start-index bis zu einem End-Index mit einem festen Wert. Der End-Index ist nicht enthalten.",
  "Array.filter": "Gib die Elemente eines Arrays aus, die die in einer Rückruffunktion angegebene Bedingung erfüllen.",
  "Array.filter|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die Filtermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.find": "Gibt den Wert des ersten Elements im Array zurück, das die angegebene Testfunktion erfüllt. Andernfalls wird nicht definiert zurückgegeben.",
  "Array.forEach": "Rufe für jedes Element eines Arrays eine definierte Rückruffunktion auf.",
  "Array.forEach|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die forEach-Methode ruft für jedes Element in dem Array die callbackfn-Funktion einmal auf.",
  "Array.get": "Rufe den Wert an einer bestimmten Position ab",
  "Array.get|param|index": "die Position in der Liste des Elementes, beginnend bei Null, z.B.: 0",
  "Array.indexOf": "Gib die Position des ersten Vorkommens eines Wertes in einem Array aus.",
  "Array.indexOf|param|fromIndex": "Die Array-Position, bei der mit der Suche begonnen werden soll. Wenn fromIndex ausgelassen wird, beginnt die Suche bei Position 0.",
  "Array.indexOf|param|item": "Der in einem Array zu lokalisierende Wert.",
  "Array.insertAt": "Füge den Wert an einer bestimmten Position ein, erhöht die Länge um 1",
  "Array.insertAt|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert eingefügt werden soll, z.B.: 0",
  "Array.isArray": "Überprüfe ob ein bestimmtes Objekt ein Array ist.",
  "Array.join": "verknüpft alle Elemente eines Arrays zu einer Zeichenfolge und gibt diese zurück.",
  "Array.join|param|sep": "Das Zeichenfolgentrennzeichen",
  "Array.length": "Rufe die Array-Länge ab oder lege sie fest. Diese Zahl ist um eins höher als die Position des letzten Elementes des Arrays.",
  "Array.map": "Ruft eine definierte Rückruffunktion bei jedem Element eines Arrays ab und gibt ein Array mit den Ergebnissen aus.",
  "Array.map|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die map-Methode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.pop": "Entferne das letzte Element eines Arrays und gib es aus.",
  "Array.push": "Füge ein neues Element an ein Array an.",
  "Array.reduce": "Rufe die angegebene Rückruffunktion für alle Elemente in einem Array auf. Der Rückgabewert der Rückruffunktion ist das kumulierte Ergebnis, es wird als Argument im nächsten Aufruf der Rückruffunktion bereitgestellt.",
  "Array.reduce|param|callbackfn": "Eine Funktion, die bis zu drei Argumente akzeptiert. Die Reduziermethode ruft für jedes Element im Array die callbackfn-Funktion einmal auf.",
  "Array.reduce|param|initialValue": "Anfangswert für Kumulierungsbeginn. Der erste Aufruf der callbackfn-Funktion hat diesen Wert als Argument statt eines Array-Wertes.",
  "Array.removeAt": "Entferne das Element an einer bestimmten Position.",
  "Array.removeElement": "Entferne das erste Vorkommen eines Elementes. Gibt wahr aus, wenn es entfernt wurde.",
  "Array.reverse": "Kehrt die Elemente in einem Array um. Das erste Array-Element wird zum letzten, das letzte Array-Element wird zum ersten.",
  "Array.set": "Speichere einen Wert an einer bestimmten Position",
  "Array.set|param|index": "die Position in der Liste, beginnend bei Null, bei der der Wert gespeichert werden soll, z.B.: 0",
  "Array.set|param|value": "der einzufügende Wert, z.B.: 0",
  "Array.shift": "Entferne das erste Element aus einem Array und gib es aus. Durch diese Methode wird die Array-Länge verändert.",
  "Array.slice": "Gib einen Abschnitt eines Arrays aus.",
  "Array.slice|param|end": "Das Ende des angegebenen Abschnitts des Arrays, z.B.: 0",
  "Array.slice|param|start": "Der Anfang des angegebenen Abschnitts des Arrays, z.B.: 0",
  "Array.some": "Testet, ob wenigstens ein Element in dem Array den von der bereitgestellten Funktion implementierten Test besteht.",
  "Array.some|param|callbackfn": "Eine Funktion, die bis zu zwei Argumente akzeptiert. Die some-Methode ruft für jedes Element in dem Array die callbackfn-Funktion einmal auf.",
  "Array.sort": "Sortiere die Elemente eines Arrays und gib das Array aus. Die Sortierung ist nicht zwangsläufig unveränderlich.",
  "Array.splice": "Entferne Elemente aus einem Array.",
  "Array.splice|param|deleteCount": "Die Anzahl der zu entfernenden Elemente, z.B.: 0",
  "Array.splice|param|start": "Die Position im Array, beginnend bei Null, bei der mit dem Entfernen von Elementen begonnen werden soll z.B.: 0",
  "Array.unshift": "Füge ein Element am Anfang eines Arrays hinzu und gib die neue Länge des Arrays aus.",
  "Array@type": "Hinzufügen, Entfernen und Ersetzen von Elementen in Listen.",
  "Boolean.toString": "Gibt eine Zeichenfolgendarstellung eines Elementes aus.",
  "Buffer.chunked": "Zwischenspeicher in Teile aufteilen, die nicht größer als angegeben sind",
  "Buffer.concat": "Gibt die Verkettung des aktuellen Puffers und des angegebenen Puffers zurückn\nVerkettet alle Puffer in der Liste",
  "Buffer.create": "Reserviert einen neuen Puffer.",
  "Buffer.create|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "Buffer.equals": "Gibt true zurück, wenn dieser und der andere Zwischenspeiche dieselben Daten enthalten",
  "Buffer.fill": "Fülle (ein Fragment) des Zwischenspeichers mit vorgegebenem Wert.",
  "Buffer.fromArray": "Erstelle einen neuen Puffer der mit Bytes aus dem angegebenen Array initialisiert wird.",
  "Buffer.fromArray|param|bytes": "Daten mit denen initialisiert werden soll",
  "Buffer.fromHex": "Erstelle einen neuen Puffer indem ein Hex-String decodiert wird",
  "Buffer.fromUTF8": "Erstelle einen neuen Puffers mit UTF8-codierter Zeichenfolge",
  "Buffer.fromUTF8|param|str": "die Zeichenfolge, die in den Puffer eingefügt werden soll",
  "Buffer.getNumber": "Lies eine Zahl im angegebenen Format vom Zwischenspeicher.",
  "Buffer.getUint8": "Liest ein vorzeichenloses Byte von einem bestimmten Speicherort",
  "Buffer.hash": "Berechne k-Bit FNV-1 nicht-kryptographischen Hash des Puffers.",
  "Buffer.indexOf": "Gibt die Position eines Puffers im aktuellen Puffer zurück",
  "Buffer.isReadOnly": "Gibt false zurück, wenn der Puffer geschrieben werden kann.",
  "Buffer.length": "Gibt false zurück, wenn der Puffer geschrieben werden kann.",
  "Buffer.packAt": "Schreibt Zahlen entsprechend dem Format in den Zwischenspeicher",
  "Buffer.rotate": "Drehe den Zwischenspeicher auf der Stelle nach links.n\n\n\nstart. z.B.: -1",
  "Buffer.rotate|param|length": "Anzahl der Elemente im Zwischenspeicher. Falls negativ wird die Länge als Zwischenspeicherlänge minus Start festgelegt.",
  "Buffer.rotate|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.rotate|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.setNumber": "Schreibe eine Zahl im angegebenen Format in den Zwischenspeicher.",
  "Buffer.setUint8": "Schreibt ein vorzeichenloses Byte an einen bestimmten Ort",
  "Buffer.shift": "Zwischenspeicher nach links verschieben, ohne Füllzeichen.\n\n\n\nstart. z.B.: -1",
  "Buffer.shift|param|length": "Anzahl der Elemente im Zwischenspeicher. Falls negativ wird die Länge als Zwischenspeicherlänge minus Start festgelegt.",
  "Buffer.shift|param|offset": "Anzahl der zu verschiebenden Bytes; nutze negativen Wert zum Verschieben nach rechts",
  "Buffer.shift|param|start": "starte Offset im Zwischenspeicher. Standardeinstellung ist 0.",
  "Buffer.sizeOfNumberFormat": "Ruft die Bytegröße im spezifierten Nummernformat ab.",
  "Buffer.slice": "Gib eine Kopie eines Fragmentes eines Zwischenspeichers aus.",
  "Buffer.toArray": "Inhalt des Zwischenspichers als Array im angegebenen Format lesen",
  "Buffer.toHex": "Konvertiert einen Puffer in seine hexadezimale Darstellung.",
  "Buffer.toString": "Konvertiert einen Puffer in einen String mit UTF8-Codierung",
  "Buffer.unpack": "Liest Zahlen aus dem Puffer entsprechend dem Format",
  "Buffer.write": "Schreib die Inhalte von `src` bei`dstOffset` in den aktuellen Zwischenspeicher.",
  "Colors": "Bekannte Farben",
  "EventCreationMode": "So wird ein Ereignis erstellt.",
  "EventCreationMode.CreateAndFire": "Calliope mini-Event wurde initialisiert, seine Event-Handler werden unverzüglich ausgeführt (nicht geeignet für die Nutzung bei Unterbrechungen!).",
  "EventCreationMode.CreateOnly": "Calliope mini-Event wurde initialisiert, es wird keine weitere Verarbeitung vorgenommen.",
  "Gesture.EightG": "Wird ausgeführt, wenn ein Stoß mit 8g erkannt wird",
  "Gesture.FreeFall": "Wird ausgeführt, wenn das Board fällt!",
  "Gesture.LogoUp": "Wird ausgeführt, wenn das Logo nach oben zeigt und das Display vertikal ist.",
  "Gesture.ScreenDown": "Wird ausgeführt, wenn das Display nach unten zeigt und das Board horizontal ist",
  "Gesture.ScreenUp": "Wird ausgeführt, wenn das Display nach oben zeigt und das Board horizontal ist",
  "Gesture.Shake": "Wird ausgeführt, wenn das Board geschüttelt wird",
  "Gesture.SixG": "Wird ausgeführt, wenn 6G Beschleuningung gemessen wird",
  "Gesture.ThreeG": "Wird ausgeführt, wenn 3G Beschleuningung gemessen wird",
  "Gesture.TiltLeft": "Wird ausgeführt, wenn LED-Matrix nach links zeigt",
  "Gesture.TiltRight": "Wird ausgeführt, wenn LED-Matrix nach rechts zeigt",
  "Image.clear": "Schaltet alle Pixel aus.",
  "Image.height": "Ruft die Höhe in Reihen ab (immer 5)",
  "Image.pixel": "Rufe den Pixelzustand bei Position ``(x,y)``ab",
  "Image.pixelBrightness": "Ruft die Pixelhelligkeit ([0..255]) an einer bestimmten Position ab",
  "Image.pixel|param|x": "Pixelspalte",
  "Image.pixel|param|y": "Pixelzeile",
  "Image.plotFrame": "Zeichnet den Frame der ``Position`` des Bildes auf dem Bildschirm.",
  "Image.plotFrame|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.plotImage": "Zeichnet das Bild in einer angegebenen Spalte auf dem Bildschirm",
  "Image.scrollImage": "Scrollt ein Bild.",
  "Image.scrollImage|param|frameOffset": "x Offset für die Bewegung bei jedem Animationsschritt, z. B. 1, 2, 5",
  "Image.scrollImage|param|interval": "Zeit zwischen jedem Animationsschritt in Millisekunden, z.B. 200",
  "Image.setPixel": "Lege den Pixelzustand bei Position ``(x,y)`` fest",
  "Image.setPixelBrightness": "Legt eine bestimmte Pixelhelligkeit an einer bestimmten Position fest",
  "Image.setPixel|param|value": "Pixelstatus",
  "Image.setPixel|param|x": "Pixelspalte",
  "Image.setPixel|param|y": "Pixelzeile",
  "Image.showFrame": "Zeigt einen bestimmten Frame eines Bildstreifens..",
  "Image.showFrame|param|frame": "Bildrahmen zum Anzeigen",
  "Image.showImage": "Zeigt einen Frame des Bildes bei Offset ``x offset``.",
  "Image.showImage|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "Image.showImage|param|xOffset": "Spaltenposition für den Anzeigenbeginn des Bildes",
  "Image.width": "Ruft die Breite in Spalten ab",
  "Infinity": "Konstante für die positive Unendlichkeit.",
  "JSON.parse": "Konvertiert eine JavaScript Object Notation (JSON) Zeichenkette in ein Objekt.",
  "JSON.stringify": "Konvertiert einen JavaScript-Wert in einen JavaScript-Objekt-Notation (JSON) String.",
  "JSON.stringify|param|indent": "Fügt dem JSON-Text Einrückung, Leerzeichen und Zeilenumbrüche hinzu, um ihn einfacher lesen zu können.",
  "JSON.stringify|param|replacer": "Nicht unterstützt; Null verwenden.",
  "JSON.stringify|param|value": "Ein JavaScript-Wert, in der Regel ein Objekt oder Array, das konvertiert werden soll.",
  "Math": "Komplexere Operationen mit Zahlen.",
  "Math.abs": "Gibt den absoluten Wert einer Zahl aus (den Wert unabhängig davon, ob er positiv oder negativ ist).\nDer absolute Wert von -5 ist zum Beispiel der gleiche wie der von 5.",
  "Math.abs|param|x": "Ein numerischer Ausdruck, für den der absolute Wert benötigt wird.",
  "Math.acos": "Gibt den Arkuskosinus (im Bogenmaß) einer Zahl aus",
  "Math.acos|param|x": "Eine Zahl",
  "Math.asin": "Gibt den Arkussinus (im Bogenmaß) einer Zahl aus",
  "Math.asin|param|x": "Eine Zahl",
  "Math.atan": "Gibt den Arkustangens (im Bogenmaß) einer Zahl aus",
  "Math.atan2": "Gibt den Arkustangens des Quotienten eines der Argumente aus.",
  "Math.atan2|param|x": "Eine Zahl",
  "Math.atan2|param|y": "Eine Zahl",
  "Math.atan|param|x": "Eine Zahl",
  "Math.ceil": "Gibt die kleinste Zahl größer als oder gleich des numerischen Argumentes aus.",
  "Math.ceil|param|x": "Ein numerischer Ausdruck.",
  "Math.constrain": "Beschränkt eine Zahl auf einen Bereich",
  "Math.cos": "Gibt den Kosinus einer Zahl aus.",
  "Math.cos|param|x": "Ein Winkel im Bogenmaß",
  "Math.exp": "Gibt ``e^x`` aus.",
  "Math.exp|param|x": "Eine Zahl",
  "Math.floor": "Gibt die größte Zahl kleiner als oder gleich des numerischen Argumentes aus.",
  "Math.floor|param|x": "Ein numerischer Ausdruck.",
  "Math.icos": "Gibt den Kosinus des Eingabewinkels zurück. Das ist eine 8-Bit Annäherung.",
  "Math.icos|param|theta": "Eingangswinkel von 0-255",
  "Math.idiv": "Gibt den Wert einer 32-Bit-Ganzzahl (mit Vorzeichen) bei der Division zweier Zahlen aus.",
  "Math.idiv|param|x": "Die erste Zahl",
  "Math.idiv|param|y": "Die zweite Zahl,
  "Math.imul": "Gibt den Wert einer 32-Bit-Ganzzahl (mit Vorzeichen) bei der Multiplikation zweier Zahlen aus.",
  "Math.imul|param|x": "Die erste Zahl",
  "Math.imul|param|y": "Die zweite Zahl",
  "Math.isin": "Gibt den Sinus des Eingabewinkels zurück. Das ist eine 8-Bit Annäherung.",
  "Math.isin|param|theta": "Eingangswinkel von 0-255",
  "Math.log": "Gibt den natürlichen Logarithmus (Basis e) einer Zahl aus.",
  "Math.log|param|x": "Eine Zahl",
  "Math.map": "Re-maps a number from one range to another. That is, a value of ``from low`` would get mapped to ``to low``, a value of ``from high`` to ``to high``, values in-between to values in-between, etc.",
  "Math.map|param|fromHigh": "the upper bound of the value's current range, eg: 1023",
  "Math.map|param|fromLow": "the lower bound of the value's current range",
  "Math.map|param|toHigh": "the upper bound of the value's target range, eg: 4",
  "Math.map|param|toLow": "the lower bound of the value's target range",
  "Math.map|param|value": "value to map in ranges",
  "Math.max": "Gibt den größeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.min": "Gibt den niedrigeren von zwei vorhandenen numerischen Ausdrücken aus.",
  "Math.pow": "Gibt den Wert eines grundlegenden Ausdrucks bis zu einer bestimmten Stärke aus.",
  "Math.pow|param|x": "Der Basiswert des Ausdrucks.",
  "Math.pow|param|y": "Der exponentielle Wert des Ausdrucks.",
  "Math.random": "Gibt eine pseudozufüllige Zahl zwischen 0 und `max`aus.",
  "Math.randomBoolean": "Erzeugt zufällig einen \"wahr\" oder \"falsch\"-Wert, wie bei einem Münzwurf.",
  "Math.randomRange": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "Math.randomRange|param|max": "the upper inclusive bound, eg: 10",
  "Math.randomRange|param|min": "the lower inclusive bound, eg: 0",
  "Math.round": "Returns a supplied numeric expression rounded to the nearest number.",
  "Math.roundWithPrecision": "Rounds ``x`` to a number with the given number of ``digits``",
  "Math.roundWithPrecision|param|digits": "the number of resulting digits",
  "Math.roundWithPrecision|param|x": "the number to round",
  "Math.round|param|x": "The value to be rounded to the nearest number.",
  "Math.sign": "Gibt das Vorzeichen von x aus und zeigt an, ob dieses positiv, negativ oder null ist.",
  "Math.sign|param|x": "Der numerische Ausdruck, der getestet werden soll",
  "Math.sin": "Returns the sine of a number.",
  "Math.sin|param|x": "An angle in radians",
  "Math.sqrt": "Gibt die Quadratwurzel einer Zahl aus.",
  "Math.sqrt|param|x": "Ein numerischer Ausdruck.",
  "Math.tan": "Returns the tangent of a number.",
  "Math.tan|param|x": "An angle in radians",
  "Math.trunc": "Returns the number with the decimal part truncated.",
  "Math.trunc|param|x": "A numeric expression.",
  "NaN": "Constant representing Not-A-Number.",
  "Number.isNaN": "Check if a given value is of type Number and it is a NaN.",
  "Number.toString": "Returns a string representation of a number.",
  "Object.keys": "Return the field names in an object.",
  "String": "Combine, split, and search text strings.",
  "String.charAt": "Gibt den Buchstaben beim angegebenen Index aus.",
  "String.charAt|param|index": "Der null-basierte index des gewünschten Zeichens.",
  "String.charCodeAt": "Gibt den Unicode-Wert des Zeichens am vorgegebenen Ort aus.",
  "String.charCodeAt|param|index": "Der null-basierte Index des gewünschten Zeichens. Wenn kein Zeichen am angegeben Index vorhanden ist, wird NaN ausgegeben.",
  "String.compare": "Bestimmt die relative Reihenfolge zweier Strings (in ASCII).",
  "String.compare|param|that": "Zeichenfolge, die mit der Zielzeichenfolge verglichen werden soll",
  "String.concat": "Gibt eine Zeichenfolge aus, die die Verkettung von zwei oder mehr Zeichenfolgen ist.",
  "String.concat|param|other": "Die Zeichenfolge, die an das Ende einer Zeichenfolge angehängt werden soll.",
  "String.fromCharCode": "Erstelle Sie eine Zeichenfolge aus dem angegebenen ASCII-Zeichencode.",
  "String.includes": "Determines whether a string contains the characters of a specified string.",
  "String.includes|param|searchValue": "the text to find",
  "String.includes|param|start": "optional start index for the search",
  "String.indexOf": "Returns the position of the first occurrence of a specified value in a string.",
  "String.indexOf|param|searchValue": "the text to find",
  "String.indexOf|param|start": "optional start index for the search",
  "String.isEmpty": "Gibt einen Wert aus, der anzeigt, ob die Zeichenfolge leer ist",
  "String.length": "Gibt die Länge einer Zeichenfolge aus.",
  "String.replace": "Return the current string with the first occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll": "Return the current string with each occurence of toReplace\nreplaced with the replacer\n\n\nor a function that accepts the substring and returns the replacement string.",
  "String.replaceAll|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replaceAll|param|toReplace": "the substring to replace in the current string",
  "String.replace|param|replacer": "either the string that replaces toReplace in the current string,",
  "String.replace|param|toReplace": "the substring to replace in the current string",
  "String.slice": "Return a substring of the current string.",
  "String.slice|param|end": "one-past-last character index",
  "String.slice|param|start": "first character index; can be negative from counting from the end, eg:0",
  "String.split": "Splits the string according to the separators",
  "String.split|param|separator": "@param limit",
  "String.substr": "Gibt eine Teilzeichenfolge der aktuellen Zeichenfolge aus.",
  "String.substr|param|length": "Anzahl der zu extrahierenden Zeichen",
  "String.substr|param|start": "Erster Zeichenindex, kann beim zählen vom Ende negativ sein, zum Beispiel: 0",
  "String.toLowerCase": "Converts the string to lower case characters.",
  "String.trim": "Return a substring of the current string with whitespace removed from both ends",
  "String@type": "Combine, split, and search text strings.",
  "StringMap": "A dictionary from string key to string values",
  "_py.range": "Returns a sequence of numbers up to but not including the limit\n\nIf more than one argument is passed, this argument is instead used for the first value in the range",
  "_py.range|param|first": "The value to end the sequence before. This value will not show up in the result.",
  "_py.range|param|step": "The value to increase or decrease by for each step in the range. Must be a nonzero integer",
  "_py.range|param|stop": "The value to end the sequence before. This value will not show up in the result",
  "_py.slice": "Returns a section of an array according to python's extended slice syntax",
  "_py.stringSlice": "Returns a section of a string according to python's extended slice syntax",
  "basic": "Bietet Zugriff auf grundlegende mini-Funktionalität.",
  "basic.clearScreen": "Schalte alle LEDs aus",
  "basic.color": "Konvertiert den Farbnamen in eine Nummer",
  "basic.forever": "Wiederholt immer wieder den Code im Hintergrund. Bei jeder Iteration ist es möglich, anderen Code auszuführen.",
  "basic.pause": "Pausiere für die angegebene Zeit in Millisekunden",
  "basic.pause|param|ms": "wie lange pausieren, z.B.: 100, 200, 500, 1000, 2000",
  "basic.plotLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.plotLeds|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.rgb": "Konvertiert Rot-, Grün- und Blau-Kanäle in eine RGB-Farbe",
  "basic.rgb|param|blue": "Blauwert zwischen 0 und 255, z.B. 255",
  "basic.rgb|param|green": "Grünwert zwischen 0 und 255, z.B. 255",
  "basic.rgb|param|red": "Rotwert zwischen 0 und 255, z.B. 255",
  "basic.setLedColor": "Legt die Farbe der eingebauten LED fest. Setze auf 0, um diese abzuschalten.",
  "basic.showAnimation": "Zeigt eine Abfolge von LED-Anzeigen als Animation.",
  "basic.showAnimation|param|interval": "Zeit in Millisekunden zwischen jedem Neuzeichnen",
  "basic.showAnimation|param|leds": "Muster der LEDs, die ein-/ und ausgeschaltet werden",
  "basic.showArrow": "Draws an arrow on the LED screen",
  "basic.showArrow|param|direction": "the direction of the arrow",
  "basic.showArrow|param|interval": "the amount of time (milliseconds) to show the icon. Default is 600.",
  "basic.showCompass": "Draws needle on the screen which always points to north",
  "basic.showCompass|param|interval": "the amount of time (milliseconds) to show the needle. Default is 600.",
  "basic.showIcon": "Draws the selected icon on the LED screen",
  "basic.showIcon|param|icon": "the predefined icon id",
  "basic.showIcon|param|interval": "the amount of time (milliseconds) to block the LED Matrix for showing the icon. Default is 600.",
  "basic.showLeds": "Zeichnet ein Bild auf dem LED-Bildschirm.",
  "basic.showLeds|param|interval": "Zeit in Millisekunden, die nach der Zeichnung gewartet wird",
  "basic.showLeds|param|leds": "Muster der LEDs, die ein- und ausgeschaltet werden",
  "basic.showNumber": "Zeige eine Nummer auf dem Display. Wenn die Nummer auf das Display passt (es sich also um eine einstellige Zahl handelt), scrolle nicht weiter.",
  "basic.showNumber|param|interval": "Scroll-Geschwindigkeit; z.B. 150, 100, 200,-100",
  "basic.showString": "Zeige Text auf dem Display an, Buchstabe für Buchstabe. Wenn die Zeichenfolge in das Display passt (also wenn es sich um einen einzelnen Buchstaben handelt), scrolle nicht weiter.",
  "basic.showString|param|interval": "Wie schnell die Zeichen geändert werden; z.B. 150, 100, 200,-100",
  "basic.showString|param|text": "Text auf dem Bildschirm dargestellt werden soll, z.B.: \"Hi!\"",
  "basic.turnRgbLedOff": "Sets the color on the build-in LED. Set to 0 to turn off.",
  "console": "Reading and writing data to the console output.",
  "console.addListener": "Adds a listener for the log messages",
  "console.inspect": "Convert any object or value to a string representation",
  "console.inspect|param|maxElements": "[optional] max number values in an object to include in output",
  "console.inspect|param|obj": "value to be converted to a string",
  "console.log": "Write a line of text to the console output.",
  "console.logValue": "Write a name:value pair as a line of text to the console output.",
  "console.logValue|param|name": "name of the value stream, eg: \"x\"",
  "console.logValue|param|value": "to write",
  "console.log|param|value": "to send",
  "console.minPriority": "Minimum priority to send messages to listeners",
  "console.removeListener": "Removes a listener",
  "control": "Laufzeit- und Event-Dienstprogramme.",
  "control.allocateNotifyEvent": "Allocates the next user notification event",
  "control.assert": "Wenn die Bedingung falsch ist, zeige eine Nachricht auf der seriellen Konsole und gebe Panic-Code 098 aus",
  "control.benchmark": "Runs the function and returns run time in microseconds.",
  "control.createBuffer": "Create a new zero-initialized buffer.",
  "control.createBufferFromUTF8": "Create a new buffer with UTF8-encoded string",
  "control.createBufferFromUTF8|param|str": "the string to put in the buffer",
  "control.createBuffer|param|size": "number of bytes in the buffer",
  "control.deviceLongSerialNumber": "Derive a unique, consistent 64-bit serial number of this device from internal data.",
  "control.deviceName": "Erzeugt einen Namen für das Gerät, basierend auf der Seriennummer",
  "control.deviceSerialNumber": "Derive a unique, consistent serial number of this device from internal data.",
  "control.dmesg": "Write a message to DMESG debugging buffer.",
  "control.dmesgPerfCounters": "Dump values of profiling performance counters.",
  "control.dmesgPtr": "Write a message and value (pointer) to DMESG debugging buffer.",
  "control.enablePerfCounter": "Enable profiling for current function.",
  "control.eventSourceId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.eventTimestamp": "Holt den Zeitstempel des letzten Events auf dem Bus",
  "control.eventValue": "Holt den Wert des letzten ausgeführten Events auf dem Bus",
  "control.eventValueId": "Gibt den Wert einer C++-Laufzeitkonstanten aus",
  "control.gc": "Force GC and dump basic information about heap.",
  "control.gcStats": "Get various statistics about the garbage collector (GC)",
  "control.heapDump": "Force GC and halt waiting for debugger to do a full heap dump.",
  "control.heapSnapshot": "Record a heap snapshot to debug memory leaks.",
  "control.inBackground": "Plant Code, der im Hintergrund wiedergegeben wird.",
  "control.micros": "Gets current time in microseconds. Overflows every ~18 minutes.",
  "control.millis": "Gets the number of milliseconds elapsed since power on.",
  "control.onEvent": "Startet ein Event auf dem Event-Bus.",
  "control.panic": "Zeigt einen spezifizierten Fehlercode und hält das Programm an.",
  "control.profilingEnabled": "Return true if profiling is enabled in the current build.",
  "control.raiseEvent": "Startet ein Event auf dem Event-Bus.",
  "control.raiseEvent|param|mode": "optionale Definition davon, wie ein Event nach dem Erstellen ausgeführt wird (Standard ist \"CREATE_AND_FIRE).",
  "control.raiseEvent|param|src": "ID der Calliope mini-Komponente, die das Event generiert hat, zum Beispiel CALLIOPE_ID_BUTTON_A.",
  "control.raiseEvent|param|value": "Komponentenspezifischer Code, der den Grund des Events angibt.",
  "control.ramSize": "Returns estimated size of memory in bytes.",
  "control.reset": "Setzt den Calliope mini zurück.",
  "control.runInParallel": "Run other code in the parallel.",
  "control.runtimeWarning": "Zeige Warnmeldung im Simulator.",
  "control.setDebugFlags": "Set flags used when connecting an external debugger.",
  "control.simmessages.onReceived": "Registers the handler for a message on a given channel",
  "control.waitForEvent": "Blocks the calling thread until the specified event is raised.",
  "control.waitMicros": "Sperrt die aktuelle Leitung für die Dauer der angegebenen Mikrosekunden",
  "control.waitMicros|param|micros": "Anzahl der Mikrosekunden, die gewartet werden soll, z.B.: 4",
  "convertToText": "Convert any value to text",
  "convertToText|param|value": "value to be converted to text",
  "forever": "Repeats the code forever in the background. On each iteration, allows other codes to run.",
  "game": "Eine Einzel-LED-Sprite-Spielumgebung",
  "game.LedSprite": "A game sprite rendered as a single LED",
  "game.LedSprite.blink": "Reports the ``blink`` duration of a sprite",
  "game.LedSprite.brightness": "Reports the ``brightness` of a sprite on the LED screen",
  "game.LedSprite.change": "Changes a property of the sprite",
  "game.LedSprite.changeBlinkBy": "Changes the ``blink`` duration by the given amount of millisecons",
  "game.LedSprite.changeBlinkBy|param|ms": "TODO",
  "game.LedSprite.changeBrightnessBy": "Changes the ``y`` position by the given amount",
  "game.LedSprite.changeBrightnessBy|param|value": "the value to change brightness",
  "game.LedSprite.changeDirectionBy": "Changes the ``direction`` position by the given amount by turning right",
  "game.LedSprite.changeDirectionBy|param|angle": "TODO",
  "game.LedSprite.changeXBy": "Changes the ``x`` position by the given amount",
  "game.LedSprite.changeXBy|param|x": "TODO",
  "game.LedSprite.changeYBy": "Changes the ``y`` position by the given amount",
  "game.LedSprite.changeYBy|param|y": "TODO",
  "game.LedSprite.change|param|property": "the name of the property to change",
  "game.LedSprite.change|param|value": "amount of change, eg: 1",
  "game.LedSprite.delete": "Deletes the sprite from the game engine. The sprite will no longer appear on the screen or interact with other sprites.",
  "game.LedSprite.direction": "Reports the current direction of a sprite",
  "game.LedSprite.get": "Gets a property of the sprite",
  "game.LedSprite.get|param|property": "the name of the property to change",
  "game.LedSprite.goTo": "Go to this position on the screen",
  "game.LedSprite.goTo|param|x": "TODO",
  "game.LedSprite.goTo|param|y": "TODO",
  "game.LedSprite.ifOnEdgeBounce": "If touching the edge of the stage and facing towards it, then turn away.",
  "game.LedSprite.isDeleted": "Reports whether the sprite has been deleted from the game engine.",
  "game.LedSprite.isTouching": "Reports true if sprite has the same position as specified sprite",
  "game.LedSprite.isTouchingEdge": "Reports true if sprite is touching an edge",
  "game.LedSprite.isTouching|param|other": "the other sprite to check overlap or touch",
  "game.LedSprite.move": "Move a certain number of LEDs in the current direction",
  "game.LedSprite.move|param|leds": "number of leds to move, eg: 1, -1",
  "game.LedSprite.off": "Turns off the sprite (on by default)",
  "game.LedSprite.on": "Turns on the sprite (on by default)",
  "game.LedSprite.set": "Sets a property of the sprite",
  "game.LedSprite.setBlink": "Sets the blink duration interval in millisecond.",
  "game.LedSprite.setBlink|param|ms": "TODO",
  "game.LedSprite.setBrightness": "Set the ``brightness`` of a sprite",
  "game.LedSprite.setBrightness|param|brightness": "the brightness from 0 (off) to 255 (on), eg: 255.",
  "game.LedSprite.setDirection": "Set the direction of the current sprite, rounded to the nearest multiple of 45",
  "game.LedSprite.setDirection|param|degrees": "new direction in degrees",
  "game.LedSprite.setX": "Set the ``x`` position of a sprite",
  "game.LedSprite.setX|param|x": "TODO",
  "game.LedSprite.setY": "Set the ``y`` position of a sprite",
  "game.LedSprite.setY|param|y": "TODO",
  "game.LedSprite.set|param|property": "the name of the property to change",
  "game.LedSprite.turn": "Turn the sprite",
  "game.LedSprite.turnLeft": "Turn to the left (counter-clockwise)",
  "game.LedSprite.turnLeft|param|degrees": "TODO",
  "game.LedSprite.turnRight": "Turn to the right (clockwise)",
  "game.LedSprite.turnRight|param|degrees": "TODO",
  "game.LedSprite.turn|param|degrees": "angle in degrees to turn, eg: 45, 90, 180, 135",
  "game.LedSprite.turn|param|direction": "left or right",
  "game.LedSprite.x": "Reports the ``x`` position of a sprite on the LED screen",
  "game.LedSprite.y": "Reports the ``y`` position of a sprite on the LED screen",
  "game.addLife": "Fügt Leben zum aktuellen Spielstand hinzu",
  "game.addLife|param|lives": "amount of lives to add",
  "game.addScore": "Fügt zum aktuellen Spielstand Punkte hinzu",
  "game.addScore|param|points": "Anzahl von zu verändernden Punkten, z.B.: 1",
  "game.createSprite": "Erzeugt einen neuen LED-Sprite, der nach rechts zeigt.",
  "game.createSprite|param|x": "horizontale Koordinate des Sprites, z.B. 2",
  "game.createSprite|param|y": "vertikale Koordinate des Sprites, z.B. 2",
  "game.currentTime": "Ruft die verbliebene Zeit (seit `starte Countdown`) oder die aktuelle Zeit (seit das Gerät gestartet wurde oder eine Stoppuhr aktiviert wurde) an.",
  "game.gameOver": "Gibt über eine Animation ein Spiel wieder.",
  "game.invalidSprite": "Ruft einen invaliden Sprite ab; wird genutzt, um Locale zu initialisieren.",
  "game.isGameOver": "Zeigt an, ob das Spil die \"Game Over\"-Sequenz angezeigt hat.",
  "game.isPaused": "Indicates if the game rendering is paused to allow other animations",
  "game.isRunning": "Holt einen Wert, der anzeigt, ob das Spiel noch läuft. Gibt `falsch`aus, wenn das Spiel zu Ende ist.",
  "game.level": "Ruft das aktuelle Level ab",
  "game.levelUp": "Erhöht das Level und zeigt eine Nachricht an.",
  "game.life": "Ruft das aktuelle Leben ab",
  "game.pause": "Pauses the game rendering engine to allow other animations",
  "game.removeLife": "Entfernt ein Leben",
  "game.removeLife|param|life": "amount of life to remove",
  "game.resume": "Resumes the game rendering engine",
  "game.score": "Ruft den aktuellen Punktestand ab",
  "game.setLife": "Setzt den aktuellen Wert der Leben",
  "game.setLife|param|value": "current life value",
  "game.setScore": "Setzt den aktuellen Wert des Spielstands",
  "game.setScore|param|value": "new score value.",
  "game.showScore": "Zeigt den Spielstand auf dem Display.",
  "game.startCountdown": "Startet einen Spiel-Countdown",
  "game.startCountdown|param|ms": "Countdown-Dauer in Millisekunden, z.B.: 10000",
  "game.startStopwatch": "Startet eine Stoppuhr.`aktuelle Zeit`gibt die vergangene Zeit an.",
  "hex": "Tagged hex literal converter",
  "images": "Erstellung, Bearbeitung und Anzeige von LED-Bildern.",
  "images.createBigImage": "Erstellt ein Bild mit zwei Einzelbildern.",
  "images.createImage": "Erstellt ein Bild, das auf den LED-Bildschirm passt.",
  "input": "Ereignisse und Daten der Sensoren",
  "input.acceleration": "Holt den Beschleunigungswert in Milli-Erdanziehung (wenn das Board flach mit dem Display nach oben liegt, X = 0, y = 0 und Z =-1024)",
  "input.acceleration|param|dimension": "x, y, or z dimension, eg: Dimension.X",
  "input.assumeCalibrationCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.buttonEventClick": "Returns the ID of an Click Event",
  "input.buttonEventDown": "Returns the ID of an Down Event",
  "input.buttonEventValue": "Returns the ID of an Button Event",
  "input.buttonIsPressed": "Get the button state (pressed or not) for ``A`` and ``B``.",
  "input.buttonIsPressed|param|button": "the button to query the request, eg: Button.A",
  "input.calibrateCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.clearCalibrationCompass": "Veraltet, Kompasskalibrierung erfolgt automatisch.",
  "input.compassHeading": "Holt die aktuelle Kompassrichtung in Grad.",
  "input.isCalibratedCompass": "Returns 'true' when the compass is calibrated. Otherwise returns 'false'.",
  "input.isGesture": "Tests if a gesture is currently detected.",
  "input.isGesture|param|gesture": "the type of gesture to detect, eg: Gesture.Shake",
  "input.lightLevel": "Liest die Lichtintensität auf dem LED-Bildschirm im Bereich von ``0`` (dunkel) und `` 255`` (hell).",
    "input.magneticForce": "Ruft den Wert der Magnetkraft in ``Mikro-Tesla`` (``µT``) ab. Diese Funktion wird im Simulator nicht unterstützt.",
  "input.magneticForce|param|dimension": "the x, y, or z dimension, eg: Dimension.X",
  "input.onButtonEvent": "Do something when a button (A, B or both A+B) receives an event.",
  "input.onButtonEvent|param|body": "code to run when event is raised",
  "input.onButtonEvent|param|button": "the button",
  "input.onButtonEvent|param|eventType": "event Type",
  "input.onButtonPressed": "Tue etwas, wenn eine Taste (``A``, ``B`` oder ``A + B``) gedrückt wird",
  "input.onButtonPressed|param|body": "code to run when event is raised",
  "input.onButtonPressed|param|button": "the button that needs to be pressed",
  "input.onGesture": "Mache etwas, wenn eine Geste gemacht wird (wie den mini zu schütteln).",
  "input.onGesture|param|body": "code to run when gesture is raised",
  "input.onGesture|param|gesture": "the type of gesture to track, eg: Gesture.Shake",
  "input.onPinPressed": "Mache etwas, wenn eine Pin gehalten wird.",
  "input.onPinPressed|param|body": "Code, der ausführt wird, wenn ein Pin gehalten wird",
  "input.onPinPressed|param|name": "the pin that needs to be pressed, eg: TouchPin.P0",
  "input.onPinReleased": "Mache etwas, wenn der Pin losgelassen wird.",
  "input.onPinReleased|param|body": "Code, der ausgeführt werden soll, wenn der Pin losgelassen wird",
  "input.onPinReleased|param|name": "the pin that needs to be released, eg: TouchPin.P0",
  "input.onPinTouchEvent": "Do something when a pin receives an touch event (while also touching the GND pin).",
  "input.onPinTouchEvent|param|body": "the code to run when event is fired on pin",
  "input.onPinTouchEvent|param|name": "the pin, eg: TouchPin.P0",
  "input.pinIsPressed": "Ruft den Pin-Zustand (gehalten oder nicht) ab. Die Erdung muss gehalten werden, um den Stromkreis zu schließen.",
  "input.pinIsPressed|param|name": "pin used to detect the touch, eg: TouchPin.P0",
  "input.rotation": "Die Neigung und Drehung des mini Drehung auf ``X-Achse``oder ``Y-Achse``, in Grad.",
  "input.rotation|param|kind": "pitch or roll",
  "input.runningTime": "Ruft die Anzahl der Millisekunden auf, die seit dem Einschalten vergangen sind.",
  "input.runningTimeMicros": "Gets the number of microseconds elapsed since power on.",
  "input.setAccelerometerRange": "Legt die Stichprobenbereich des Beschleunigungssensors in Schwerkraft fest.",
  "input.setAccelerometerRange|param|range": "Ein Wert, der die maximale Stärke der gemessenen Beschleunigung beschreibt",
  "input.soundLevel": "gets the level of loudness from 0 (silent) to 255 (loud)",
  "input.temperature": "Ruft die aktuelle Temperatur in Grad Celsius (°C) ab.",
  "led": "Steuerung des LED-Bildschirms.",
  "led.brightness": "Ruft die Helligkeit des Bildschirms ab, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.displayMode": "Gets the current display mode",
  "led.enable": "Schaltet das Display an und aus",
  "led.fadeIn": "Blendet die Bildschirmanzeige ein.",
  "led.fadeIn|param|ms": "fade time in milleseconds",
  "led.fadeOut": "Blendet die Bildschirmhelligkeit aus.",
  "led.fadeOut|param|ms": "fade time in milliseconds",
  "led.plot": "Schalte die angegebene LED mit Hilfe von X- und Y-Koordinaten ein (X ist horizontal, Y ist vertikal). (0,0) ist die obere linke Ecke.",
  "led.plotAll": "Schaltet alle LEDs an",
  "led.plotBarGraph": "Zeigt ein vertikales Balkendiagramm an, basierend auf dem `Wert`und dem `Hoch`-Wert. Wenn `Hoch`0 ist, wird das Diagramm automatisch angepasst.",
  "led.plotBarGraph|param|high": "maximalen Wert. Wenn dieser 0 ist, wird der Maximalwert automatisch angepasst, z.B.: 0",
  "led.plotBarGraph|param|value": "aktueller Wert zum Darstellen",
  "led.plotBrightness": "Turn on the specified LED with specific brightness using x, y coordinates (x is horizontal, y is vertical). (0,0) is upper left.",
  "led.plotBrightness|param|brightness": "the brightness from 0 (off) to 255 (bright), eg:255",
  "led.plotBrightness|param|x": "the horizontal coordinate of the LED starting at 0",
  "led.plotBrightness|param|y": "the vertical coordinate of the LED starting at 0",
  "led.plot|param|x": "the horizontal coordinate of the LED starting at 0",
  "led.plot|param|y": "the vertical coordinate of the LED starting at 0",
  "led.point": "Ruft den An/Aus-Status einer vorgegebenen LED mittels X-/Y-Koordinaten ab. (0,0) ist oben links.",
  "led.pointBrightness": "Get the brightness state of the specified LED using x, y coordinates. (0,0) is upper left.",
  "led.pointBrightness|param|x": "the horizontal coordinate of the LED",
  "led.pointBrightness|param|y": "the vertical coordinate of the LED",
  "led.point|param|x": "the horizontal coordinate of the LED",
  "led.point|param|y": "the vertical coordinate of the LED",
  "led.screenshot": "Macht einen Screenshot vom LED-Bildschirm und gibt ein Bild aus.",
  "led.setBrightness": "Lege die Helligkeit des Bildschirms fest, von 0 (aus) bis 255 (volle Helligkeit).",
  "led.setBrightness|param|value": "Helligkeitswert, z.B.: 255, 127, 0",
  "led.setDisplayMode": "Legt den Anzeigemodus von Wiedergabe-LEDs zwischen Schwarz und Weiß und Graustufen fest.",
  "led.setDisplayMode|param|mode": "TODO",
  "led.stopAnimation": "Bricht die aktuelle Animation ab und löscht andere ausstehende Animationen.",
  "led.toggle": "Schaltet ein bestimmtes Pixel ein",
  "led.toggleAll": "Invertiert die aktuelle LED-Anzeige",
  "led.toggle|param|x": "pixel column",
  "led.toggle|param|y": "pixel row",
  "led.unplot": "Schalte die angegebene LED mit x-und y-Koordinaten ab (X ist horizontal, y ist vertikal). (0,0) ist oben links.",
  "led.unplot|param|x": "the horizontal coordinate of the LED",
  "led.unplot|param|y": "the vertical coordinate of the LED",
  "light.sendWS2812Buffer": "Sends a color buffer to a light strip",
  "light.sendWS2812BufferWithBrightness": "Sends a color buffer to a light strip",
  "light.setMode": "Sets the light mode of a pin",
  "loops.everyInterval": "Repeats the code forever in the background.\nAfter each iteration, allows other codes to run for a set duration\nso that it runs on a timer",
  "loops.everyInterval|param|interval": "time (in ms) to wait between each iteration of the action.",
  "motors": "Blöcke, die genutzt werden, um Onboard-Motoren zu steuern",
  "motors.dualMotorPower": "Steuert zwei an das Board angeschlossene Motoren. Schaltet auf Dual-Motor-Modus um!",
  "motors.motorCommand": "Schicke Anhalten, Ausrollen oder Anhalten-Befehle an den Motor. Hat im Dual-Motor-Modus keinen Effekt.",
  "motors.motorPower": "Schaltet den Motor bei einer bestimmten Prozentzahl der Kraft an. Schaltet um auf den Single-Motor-Modus!",
  "motors.motorPower|param|power": "%percent der Kraft, die an den Motor geschickt wird. Negative Werte laufen rückwärts, z.B. 50",
  "msgpack.packNumberArray": "Pack a number array into a buffer.",
  "msgpack.packNumberArray|param|nums": "the numbers to be packed",
  "msgpack.unpackNumberArray": "Unpacks a buffer into a number array.",
  "music": "Generierung von Musik",
  "music.beat": "Gibt die Dauer eines Taktes in Milli-Sekunden aus",
  "music.beginMelody": "Use startMelody instead",
  "music.builtInMelody": "Gets the melody array of a built-in melody.",
  "music.changeTempoBy": "Ändere die Geschwindigkeit um den angegebenen Betrag",
  "music.changeTempoBy|param|bpm": "Die Änderung in Schlägen pro Minute auf das Tempo, z.B.: 20",
  "music.melodyEditor": "Create a melody with the melody editor.",
  "music.noteFrequency": "Ruft die Frequenz einer Note ab.",
  "music.noteFrequency|param|name": "the note name",
  "music.onEvent": "Registers code to run on various melody events",
  "music.playMelody": "Play a melody from the melody editor.",
  "music.playMelody|param|melody": "- string of up to eight notes [C D E F G A B C5] or rests [-] separated by spaces, which will be played one at a time, ex: \"E D G F B A C5 B \"",
  "music.playMelody|param|tempo": "- number in beats per minute (bpm), dictating how long each note will play for",
  "music.playTone": "Spielt einen Ton für den angegebenen Zeitraum auf dem Lautsprecher ab.",
  "music.playTone|param|frequency": "pitch of the tone to play in Hertz (Hz), eg: Note.C",
  "music.playTone|param|ms": "Tondauer in Millisekunden (ms)",
  "music.rest": "Ruht (spielt nichts) für eine bestimmte Zeit auf Pin ``P0``.",
  "music.rest|param|ms": "Restdauer in Millisekunden (ms)",
  "music.ringTone": "Spielt einen Ton durch den Lautsprecher ab.",
  "music.ringTone|param|frequency": "Tonhöhe des abzuspielenden Tones in Hertz (Hz)",
  "music.setPlayTone": "Sets a custom playTone function for playing melodies",
  "music.setTempo": "Legt die Geschwindigkeit auf den angegebenen Wert fest.",
  "music.setTempo|param|bpm": "Die neue Geschwindigkeit in Schlägen pro Minute, z.B.: 120",
  "music.setVolume": "Set the default output volume of the sound synthesizer.",
  "music.setVolume|param|volume": "the volume 0...255",
  "music.speakerPlayTone": "Plays a tone through ``speaker`` for the given duration.",
  "music.speakerPlayTone|param|frequency": "pitch of the tone to play in Hertz (Hz)",
  "music.speakerPlayTone|param|ms": "tone duration in milliseconds (ms)",
  "music.startMelody": "Starts playing a melody.\nNotes are expressed as a string of characters with this format: NOTE[octave][:duration]",
  "music.startMelody|param|melodyArray": "the melody array to play",
  "music.startMelody|param|options": "melody options, once / forever, in the foreground / background",
  "music.stopAllSounds": "Stop all sounds and melodies currently playing.",
  "music.stopMelody": "Stops the melodies",
  "music.stopMelody|param|options": "which melody to stop",
  "music.tempo": "Gibt die Geschwindigkeit in Schlägen pro Minute aus. Die Geschwindigkeit ist Schnelligkeit (Bpm = Beats pro Minute), in der Töne abgespielt werden. Je größer der Wert, desto schneller werden die Töne abgespielt.",
  "music.volume": "Returns the current output volume of the sound synthesizer.",
  "parseFloat": "Convert a string to a number.",
  "parseInt": "Convert a string to an integer.\n\n\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\nAll other strings are considered decimal.",
  "parseInt|param|radix": "optional A value between 2 and 36 that specifies the base of the number in text.",
  "parseInt|param|text": "A string to convert into an integral number. eg: \"123\"",
  "pause": "Pause for the specified time in milliseconds",
  "pauseUntil": "Busy wait for a condition to be true",
  "pauseUntil|param|condition": "condition to test for",
  "pauseUntil|param|timeOut": "if positive, maximum duration to wait for in milliseconds",
  "pause|param|ms": "how long to pause for, eg: 100, 200, 500, 1000, 2000",
  "pins": "Steuere die Stromstärke über die Pins für analoge/digitale Signale, Servos, I2C,...",
  "pins.C10": "Pin C10",
  "pins.C11": "Pin C11",
  "pins.C12": "Pin C12",
  "pins.C16": "Pin C16",
  "pins.C17": "Pin C17",
  "pins.C18": "Pin C18",
  "pins.C4": "Pin C4",
  "pins.C5": "Pin C5",
  "pins.C6": "Pin C6",
  "pins.C7": "Pin C7",
  "pins.C8": "Pin C8",
  "pins.C9": "Pin C9",
  "pins.P0": "Pin P0",
  "pins.P1": "Pin P1",
  "pins.P2": "Pin P2",
  "pins.P3": "Pin P3",
  "pins.analogPitch": "Gibt ein Pulsweiten Modulation (PWM)-Signal über den aktuellen Pitch-Pin. Benutze `analog set pitch pin`, um den Pitch-Pin festzulegen.",
  "pins.analogPitchVolume": "Gets the volume the pitch pin from 0..255",
  "pins.analogPitch|param|frequency": "frequency to modulate in Hz.",
  "pins.analogPitch|param|ms": "duration of the pitch in milli seconds.",
  "pins.analogReadPin": "Lese den Anschlusswert als Analog aus, d. h. als einen Wert zwischen 0 und 1023.",
  "pins.analogReadPin|param|name": "pin to write to, eg: AnalogPin.P1",
  "pins.analogSetPeriod": "Stellt die Pulsweite Modulation (PWM) des Analogausganges auf den angegebenen Wert in ** Mikrosekunden ** oder `1/1000` Millisekunden ein.\nWenn dieser Pin nicht als einen Analogausgang (mit `analog write pin`) konfiguriert ist, hat der Vorgang keine Auswirkungen.",
  "pins.analogSetPeriod|param|micros": "Zeit in Mikrosekunden. z.B.: 20000",
  "pins.analogSetPeriod|param|name": "analog pin to set period to, eg: AnalogPin.P1",
  "pins.analogSetPitchPin": "Set the pin used when using analog pitch or music.",
  "pins.analogSetPitchPin|param|name": "pin to modulate pitch from",
  "pins.analogSetPitchVolume": "Sets the volume on the pitch pin",
  "pins.analogSetPitchVolume|param|volume": "the intensity of the sound from 0..255",
  "pins.analogWritePin": "Legt den Wert des Verbinders auf analog fest. Der Wert muss zwischen 0 und 1023 liegen.",
  "pins.analogWritePin|param|name": "pin name to write to, eg: AnalogPin.P1",
  "pins.analogWritePin|param|value": "Wert, der auf den Pin geschrieben werden soll, zwischen ``0`` und ``1023`` z.B.: 1023,0",
  "pins.createBuffer": "Erstellt einen Null-initialisierten Zwischenspeicher.",
  "pins.createBuffer|param|size": "Anzahl der Bytes im Zwischenspeicher",
  "pins.digitalReadPin": "Lese den angegebene Pin oder Verbinder als 0 oder 1",
  "pins.digitalReadPin|param|name": "pin to read from, eg: DigitalPin.P0",
  "pins.digitalWritePin": "Setzt einen Pin- oder Verbinder-Wert auf 0 oder 1.",
  "pins.digitalWritePin|param|name": "pin to write to, eg: DigitalPin.P0",
  "pins.digitalWritePin|param|value": "Wert, der auf dem Pin 1 gesetzt werden soll, z.B. 0",
  "pins.i2cReadBuffer": "Lese `Größe`bytes aus einer 7-bit I2C-Adresse.",
  "pins.i2cReadNumber": "Lese eine Nummer aus einer 7-bit I2C-Adresse.",
  "pins.i2cWriteBuffer": "Schreibt Bytes in eine 7-bit I2C-Adresse.",
  "pins.i2cWriteNumber": "Schreibe eine Nummer in eine 7-bit I2C-Adresse.",
  "pins.map": "Definiert eine Nummer von einer Auswahl zu einer anderen um. Ein Wert ``von niedrig``wird so auf ``zu niedrig``umgeändert, ein Wert ``von hoch`` zu ``zu hoch`` etc.",
  "pins.map|param|fromHigh": "die obere Grenze des aktuellen Wertebereichs, z.B.: 1023",
  "pins.map|param|fromLow": "die untere Grenze des aktuellen Wertebereichs",
  "pins.map|param|toHigh": "die Obergrenze des Wertezielbereichs, z.B.: 4",
  "pins.map|param|toLow": "die Untergrenze des Wertezielbereichs",
  "pins.map|param|value": "Wert in Bereichen zuordnen",
  "pins.onPulsed": "Stellt diesen Pin als einen Digitaleingang ein und generiert Ereignisse, deren Zeitstempel die Dauer darstellt, in der der Pin entweder ``hoch``oder ``niedrig``war.",
  "pins.onPulsed|param|name": "digital pin to register to, eg: DigitalPin.P0",
  "pins.onPulsed|param|pulse": "the value of the pulse, eg: PulseValue.High",
  "pins.pulseDuration": "Ruft die Dauer des letzten Impulses in Mikrosendungen ab. Diese Funktion soll von einem `onPulsed`-Handler aufgerufen werden.",
  "pins.pulseIn": "Gibt die Dauer eines Pulses in Mikrosekunden an",
  "pins.pulseIn|param|name": "der Pin, der den Puls misst",
  "pins.pulseIn|param|value": "der Wert des Pulses (Standard hoch)",
  "pins.pushButton": "Mounts a push button on the given pin",
  "pins.servoSetContinuous": "Specifies that a continuous servo is connected.",
  "pins.servoSetPulse": "Konfiguriert diesen IO-Pin als einen analogen/PWM-Ausgang, stellt den Zeitraum auf 20 ms ein und setzt die Pulsweite fest, basieren auf dem angegeben Wert **Mikrosekunden** oder `1/1000`Millisekunden.",
  "pins.servoSetPulse|param|micros": "Impulsdauer in Mikrosekunden, z.B.: 1500",
  "pins.servoSetPulse|param|name": "PIN-Name",
  "pins.servoWritePin": "Schreibt einen Wert in den Servo, der die Welle entsprechend kontroliert. Auf einem Standard-Servo wird so der Winkel der Welle (in Grad) eingestellt, sodass sich die Welle entsprechend anpasst. Auf einem kontinuierlich drehenden Servo wird dadurch die Geschwindigkeit des Servos festgelegt, wobei ``0``die volle Geschwindigkeit in eine Richtung darstellt, ``180``die volle Geschwindigkeit in die andere, und ein Wert von ``90`` einen Stillstand erzeugt.",
  "pins.servoWritePin|param|name": "pin to write to, eg: AnalogPin.P1",
  "pins.servoWritePin|param|value": "Winkel oder Rotationsbeschleunigung, z.B.: 180,90,0",
  "pins.setAudioPin": "Set the pin used when producing sounds and melodies. Default is P0.",
  "pins.setAudioPin|param|name": "pin to modulate pitch from",
  "pins.setEvents": "Configure the events emitted by this pin. Events can be subscribed to\nusing ``control.onEvent()``.",
  "pins.setEvents|param|name": "pin to set the event mode on, eg: DigitalPin.P0",
  "pins.setEvents|param|type": "the type of events for this pin to emit, eg: PinEventType.Edge",
  "pins.setMatrixWidth": "Set the matrix width for Neopixel strip (already assigned to a pin).\nShould be used in conjunction with `set matrix width` from Neopixel package.",
  "pins.setPull": "Stellt die Anziehungskraft des Pins ein.",
  "pins.setPull|param|name": "pin to set the pull mode on, eg: DigitalPin.P0",
  "pins.setPull|param|pull": "one of the mbed pull configurations, eg: PinPullMode.PullUp",
  "pins.spiFormat": "Set the SPI bits and mode",
  "pins.spiFormat|param|bits": "the number of bits, eg: 8",
  "pins.spiFormat|param|mode": "the mode, eg: 3",
  "pins.spiFrequency": "Set the SPI frequency",
  "pins.spiFrequency|param|frequency": "the clock frequency, eg: 1000000",
  "pins.spiPins": "Set the MOSI, MISO, SCK pins used by the SPI connection",
  "pins.spiTransfer": "Write to and read from the SPI slave at the same time",
  "pins.spiTransfer|param|command": "Data to be sent to the SPI slave (can be null)",
  "pins.spiTransfer|param|response": "Data received from the SPI slave (can be null)",
  "pins.spiWrite": "Schreibe in den SPI-Slave und gebe die Antwort aus",
  "pins.spiWrite|param|value": "Daten, die an den SPI-Slave geschickt werden sollen",
  "randint": "Returns a pseudorandom number between min and max included.\nIf both numbers are integral, the result is integral.",
  "randint|param|max": "the upper inclusive bound, eg: 10",
  "randint|param|min": "the lower inclusive bound, eg: 0",
  "serial": "Lesen und Schreiben von Daten über eine serielle Verbindung.",
  "serial.NEW_LINE": "The string used to mark a new line, default is \\r\\n",
  "serial.delimiters": "Gibt die mit dem Begrenzer korrespondierende Zeichenfolge aus.",
  "serial.onDataReceived": "Register an event to be fired when one of the delimiter is matched.",
  "serial.onDataReceived|param|delimiters": "the characters to match received characters against.",
  "serial.readBuffer": "Read multiple characters from the receive buffer. \nIf length is positive, pauses until enough characters are present.",
  "serial.readBuffer|param|length": "default buffer length",
  "serial.readLine": "Liest eine Textzeile aus der seriellen Schnittstelle.",
  "serial.readString": "Read the buffered received data as a string",
  "serial.readUntil": "Liest aus eine Textzeile aus dem seriellen Anschluss und gibt den Puffer aus, wenn die Begrenzung erreicht wurde.",
  "serial.readUntil|param|delimiter": "Text-Begrenzung, die die Textblöcke voneinander trennt",
  "serial.redirect": "Konfiguriert dynamisch die serielle Instanz, damit sie andere Pins als USBTX und USBRX benutzt.",
  "serial.redirectToUSB": "Direct the serial input and output to use the USB connection.",
  "serial.redirect|param|rate": "the new baud rate. eg: 115200",
  "serial.redirect|param|rx": "the new reception pin, eg: SerialPin.P1",
  "serial.redirect|param|tx": "the new transmission pin, eg: SerialPin.P0",
  "serial.setBaudRate": "Set the baud rate of the serial port",
  "serial.setRxBufferSize": "Sets the size of the RX buffer in bytes",
  "serial.setRxBufferSize|param|size": "length of the rx buffer in bytes, eg: 32",
  "serial.setTxBufferSize": "Sets the size of the TX buffer in bytes",
  "serial.setTxBufferSize|param|size": "length of the tx buffer in bytes, eg: 32",
  "serial.setWriteLinePadding": "Sets the padding length for lines sent with \"write line\".",
  "serial.setWriteLinePadding|param|length": "the number of bytes alignment, eg: 0",
  "serial.writeBuffer": "Send a buffer through serial connection",
  "serial.writeLine": "Gibt eine Zeile des Textes an die serielle",
  "serial.writeNumber": "Gibt einen numerischen Wert an die serielle",
  "serial.writeNumbers": "Print an array of numeric values as CSV to the serial port",
  "serial.writeString": "Sendet ein Stück Text über serielle Verbindung.",
  "serial.writeValue": "Schreibt ein ``Namen: Wert`` Wertepaar auf die serielle Schnittstelle.",
  "serial.writeValue|param|name": "Name des Wertestreams, z.B.: x",
  "serial.writeValue|param|value": "Schreiben",
  "storage": "Provides access to persistent storage functionality.\n\nProvides access to persistent storage functionality.",
  "storage.getNumber": "Reads a key value pair from the non volatile storage as a number",
  "storage.getNumber|param|key": "the key for accesing the value",
  "storage.getValueInt": "Reads a key value pair from the non volatile storage",
  "storage.getValueInt|param|key": "the key for accesing the value",
  "storage.putNumber": "Saves a key value pair in the non volatile storage",
  "storage.putNumber|param|key": "the key for accesing the value",
  "storage.putNumber|param|value": "value to store",
  "storage.putValueInt": "Saves a key value pair in the non volatile storage",
  "storage.putValueInt|param|key": "the key for accesing the value",
  "storage.putValueInt|param|value": "value to store",
  "storage.remove": "Removes a key value pair from the non volatile storage",
  "storage.removeNumber": "Deletes the key from the non volatile storage",
  "storage.removeNumber|param|key": "the key for accesing the value",
  "storage.remove|param|key": "the key for accesing the value"
}
